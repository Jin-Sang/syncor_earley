<<<<<<<<<<<< 116 problem >>>>>>>>>>>




Next Token : 
, Posbility: 0.3416
Next Token : ____, Posbility: 0.0691
Next Token : ix, Posbility: 0.0567
Next Token : 	, Posbility: 0.0459
Next Token : 

, Posbility: 0.0326
Choose : 
,  Posbility: 0.3416
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 

---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 

---------------------------
Next Token : '', Posbility: 0.1725
Next Token : #, Posbility: 0.1083
Next Token : import, Posbility: 0.0964
Next Token : def, Posbility: 0.0738
Next Token : 
, Posbility: 0.0569
Choose : '',  Posbility: 0.1725
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
''
---------------------------
Next Token : ', Posbility: 0.9929
Next Token : '., Posbility: 0.0017
Next Token : '/, Posbility: 0.0011
Next Token : 
, Posbility: 0.0008
Next Token : '?, Posbility: 0.0003
Choose : ',  Posbility: 0.9929
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
---------------------------
Next Token : 
, Posbility: 0.2481
Next Token : Write, Posbility: 0.0686
Next Token : def, Posbility: 0.0220
Next Token : count, Posbility: 0.0211
Next Token : This, Posbility: 0.0206
Choose : 
,  Posbility: 0.2481
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''

---------------------------
Next Token : def, Posbility: 0.1117
Next Token : 
, Posbility: 0.0976
Next Token :     , Posbility: 0.0699
Next Token : '', Posbility: 0.0318
Next Token : #, Posbility: 0.0262
Choose : def,  Posbility: 0.1117
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def
---------------------------
Next Token :  count, Posbility: 0.5121
Next Token :  non, Posbility: 0.0683
Next Token :  sub, Posbility: 0.0338
Next Token :  is, Posbility: 0.0166
Next Token :  Count, Posbility: 0.0141
Choose :  count,  Posbility: 0.5121
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count
---------------------------
Next Token : _, Posbility: 0.4920
Next Token : Non, Posbility: 0.1886
Next Token : Sub, Posbility: 0.1336
Next Token : (, Posbility: 0.0824
Next Token : non, Posbility: 0.0213
Choose : _,  Posbility: 0.4920
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_
---------------------------
Next Token : sub, Posbility: 0.4062
Next Token : non, Posbility: 0.3974
Next Token : n, Posbility: 0.0173
Next Token : string, Posbility: 0.0158
Next Token : empty, Posbility: 0.0149
Choose : sub,  Posbility: 0.4062
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_sub
---------------------------
Next Token : string, Posbility: 0.4480
Next Token : strings, Posbility: 0.2634
Next Token : str, Posbility: 0.1135
Next Token : _, Posbility: 0.0959
Next Token : (, Posbility: 0.0357
Choose : string,  Posbility: 0.4480
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring
---------------------------
Next Token : (, Posbility: 0.8697
Next Token : _, Posbility: 0.1166
Next Token :  (, Posbility: 0.0074
Next Token : ():, Posbility: 0.0022
Next Token : (_, Posbility: 0.0008
Choose : (,  Posbility: 0.8697
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(
---------------------------
Next Token : string, Posbility: 0.8777
Next Token : str, Posbility: 0.0484
Next Token : s, Posbility: 0.0445
Next Token : input, Posbility: 0.0080
Next Token :  string, Posbility: 0.0047
Choose : string,  Posbility: 0.8777
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string
---------------------------
Next Token : ,, Posbility: 0.9282
Next Token : ):, Posbility: 0.0459
Next Token : 1, Posbility: 0.0112
Next Token : _, Posbility: 0.0080
Next Token : :, Posbility: 0.0028
Choose : ,,  Posbility: 0.9282
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string,
---------------------------
Next Token :  sub, Posbility: 0.7852
Next Token : sub, Posbility: 0.1010
Next Token :  subst, Posbility: 0.0603
Next Token :  pattern, Posbility: 0.0241
Next Token :  substr, Posbility: 0.0062
Choose :  sub,  Posbility: 0.7852
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub
---------------------------
Next Token : _, Posbility: 0.8546
Next Token : ):, Posbility: 0.0761
Next Token : String, Posbility: 0.0275
Next Token : string, Posbility: 0.0241
Next Token : ,, Posbility: 0.0035
Choose : _,  Posbility: 0.8546
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_
---------------------------
Next Token : string, Posbility: 0.8799
Next Token : str, Posbility: 0.1016
Next Token : s, Posbility: 0.0046
Next Token : sub, Posbility: 0.0026
Next Token : word, Posbility: 0.0018
Choose : string,  Posbility: 0.8799
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string
---------------------------
Next Token : ):, Posbility: 0.9734
Next Token : ), Posbility: 0.0133
Next Token : ,, Posbility: 0.0060
Next Token : _, Posbility: 0.0055
Next Token : 1, Posbility: 0.0005
Choose : ):,  Posbility: 0.9734
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
---------------------------
Next Token : 
, Posbility: 0.9103
Next Token : 

, Posbility: 0.0607
Next Token :  , Posbility: 0.0197
Next Token :   , Posbility: 0.0026
Next Token :  #, Posbility: 0.0021
Choose : 
,  Posbility: 0.9103
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):

---------------------------
Next Token :     , Posbility: 0.7428
Next Token : 	, Posbility: 0.1005
Next Token :   , Posbility: 0.0437
Next Token : '', Posbility: 0.0359
Next Token :    , Posbility: 0.0214
Choose :     ,  Posbility: 0.7428
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    
---------------------------
Next Token : count, Posbility: 0.2810
Next Token : '', Posbility: 0.1075
Next Token : #, Posbility: 0.0652
Next Token : sub, Posbility: 0.0597
Next Token : counter, Posbility: 0.0535
Choose : count,  Posbility: 0.2810
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count
---------------------------
Next Token :  =, Posbility: 0.8384
Next Token : =, Posbility: 0.0800
Next Token : _, Posbility: 0.0597
Next Token : s, Posbility: 0.0096
Next Token : ,, Posbility: 0.0022
Choose :  =,  Posbility: 0.8384
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count =
---------------------------
Next Token :  0, Posbility: 0.9477
Next Token :  len, Posbility: 0.0094
Next Token : 0, Posbility: 0.0076
Next Token :  [], Posbility: 0.0057
Next Token :  1, Posbility: 0.0050
Choose :  0,  Posbility: 0.9477
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
---------------------------
Next Token : 
, Posbility: 0.8801
Next Token : 

, Posbility: 0.0790
Next Token :  , Posbility: 0.0222
Next Token : ;, Posbility: 0.0097
Next Token :  #, Posbility: 0.0032
Choose : 
,  Posbility: 0.8801
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0

---------------------------
Next Token :     , Posbility: 0.9887
Next Token : 	, Posbility: 0.0022
Next Token : '', Posbility: 0.0018
Next Token :   , Posbility: 0.0015
Next Token :  , Posbility: 0.0013
Choose :     ,  Posbility: 0.9887
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    
---------------------------
Next Token : for, Posbility: 0.6372
Next Token : i, Posbility: 0.0467
Next Token : 
, Posbility: 0.0260
Next Token : if, Posbility: 0.0248
Next Token : #, Posbility: 0.0244
Choose : for,  Posbility: 0.6372
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for
---------------------------
Next Token :  i, Posbility: 0.8690
Next Token :  index, Posbility: 0.0269
Next Token :  x, Posbility: 0.0148
Next Token :  char, Posbility: 0.0145
Next Token :  s, Posbility: 0.0080
Choose :  i,  Posbility: 0.8690
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i
---------------------------
Next Token :  in, Posbility: 0.9834
Next Token : ,, Posbility: 0.0149
Next Token :   , Posbility: 0.0005
Next Token : _, Posbility: 0.0004
Next Token : 1, Posbility: 0.0003
Choose :  in,  Posbility: 0.9834
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in
---------------------------
Next Token :  range, Posbility: 0.9914
Next Token :  string, Posbility: 0.0033
Next Token :  sub, Posbility: 0.0019
Next Token :  x, Posbility: 0.0011
Next Token :  list, Posbility: 0.0005
Choose :  range,  Posbility: 0.9914
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range
---------------------------
Next Token : (, Posbility: 0.9774
Next Token :  (, Posbility: 0.0212
Next Token : (-, Posbility: 0.0007
Next Token : ((, Posbility: 0.0005
Next Token :  (-, Posbility: 0.0000
Choose : (,  Posbility: 0.9774
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(
---------------------------
Next Token : len, Posbility: 0.7402
Next Token : 0, Posbility: 0.2323
Next Token :  len, Posbility: 0.0171
Next Token : 1, Posbility: 0.0044
Next Token :  0, Posbility: 0.0014
Choose : len,  Posbility: 0.7402
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len
---------------------------
Next Token : (, Posbility: 0.9998
Next Token :  (, Posbility: 0.0000
Next Token : ((, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : ({, Posbility: 0.0000
Choose : (,  Posbility: 0.9998
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(
---------------------------
Next Token : string, Posbility: 0.9724
Next Token : sub, Posbility: 0.0222
Next Token : s, Posbility: 0.0022
Next Token : str, Posbility: 0.0016
Next Token : list, Posbility: 0.0004
Choose : string,  Posbility: 0.9724
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string
---------------------------
Next Token : ), Posbility: 0.7914
Next Token : )-, Posbility: 0.1907
Next Token : )+, Posbility: 0.0108
Next Token : )), Posbility: 0.0050
Next Token : ),, Posbility: 0.0005
Choose : ),  Posbility: 0.7914
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)
---------------------------
Next Token : ):, Posbility: 0.6278
Next Token :  -, Posbility: 0.3678
Next Token :  +, Posbility: 0.0037
Next Token :  ):, Posbility: 0.0002
Next Token : //, Posbility: 0.0002
Choose : ):,  Posbility: 0.6278
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
---------------------------
Next Token : 
, Posbility: 0.9810
Next Token : 

, Posbility: 0.0077
Next Token :  , Posbility: 0.0043
Next Token :  #, Posbility: 0.0024
Next Token :   , Posbility: 0.0014
Choose : 
,  Posbility: 0.9810
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):

---------------------------
Next Token :         , Posbility: 0.9822
Next Token :       , Posbility: 0.0042
Next Token :     , Posbility: 0.0039
Next Token :             , Posbility: 0.0031
Next Token :        , Posbility: 0.0027
Choose :         ,  Posbility: 0.9822
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        
---------------------------
Next Token : if, Posbility: 0.7804
Next Token : for, Posbility: 0.1040
Next Token : #, Posbility: 0.0174
Next Token : count, Posbility: 0.0173
Next Token : j, Posbility: 0.0147
Choose : if,  Posbility: 0.7804
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if
---------------------------
Next Token :  string, Posbility: 0.7557
Next Token : (, Posbility: 0.0909
Next Token :  (, Posbility: 0.0713
Next Token :  sub, Posbility: 0.0352
Next Token :  len, Posbility: 0.0070
Choose :  string,  Posbility: 0.7557
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string
---------------------------
Next Token : [, Posbility: 0.9837
Next Token : ., Posbility: 0.0136
Next Token :  ==, Posbility: 0.0020
Next Token :  [, Posbility: 0.0003
Next Token : ==, Posbility: 0.0002
Choose : [,  Posbility: 0.9837
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[
---------------------------
Next Token : i, Posbility: 0.9933
Next Token : :, Posbility: 0.0043
Next Token : 0, Posbility: 0.0017
Next Token : (, Posbility: 0.0001
Next Token :  i, Posbility: 0.0001
Choose : i,  Posbility: 0.9933
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i
---------------------------
Next Token : :, Posbility: 0.8884
Next Token : ], Posbility: 0.0763
Next Token :  :, Posbility: 0.0150
Next Token : :], Posbility: 0.0130
Next Token : :(, Posbility: 0.0042
Choose : :,  Posbility: 0.8884
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:
---------------------------
Next Token : i, Posbility: 0.6549
Next Token : ]., Posbility: 0.2060
Next Token : len, Posbility: 0.0947
Next Token :  i, Posbility: 0.0230
Next Token :  len, Posbility: 0.0075
Choose : i,  Posbility: 0.6549
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i
---------------------------
Next Token : +, Posbility: 0.8573
Next Token :  +, Posbility: 0.1417
Next Token : ], Posbility: 0.0005
Next Token : +(, Posbility: 0.0003
Next Token : -, Posbility: 0.0000
Choose : +,  Posbility: 0.8573
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+
---------------------------
Next Token : len, Posbility: 0.9750
Next Token :  len, Posbility: 0.0140
Next Token : sub, Posbility: 0.0080
Next Token : int, Posbility: 0.0008
Next Token : 2, Posbility: 0.0004
Choose : len,  Posbility: 0.9750
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len
---------------------------
Next Token : (, Posbility: 0.9999
Next Token : ], Posbility: 0.0000
Next Token :  (, Posbility: 0.0000
Next Token : (', Posbility: 0.0000
Next Token : ((, Posbility: 0.0000
Choose : (,  Posbility: 0.9999
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(
---------------------------
Next Token : sub, Posbility: 0.9991
Next Token : str, Posbility: 0.0003
Next Token : string, Posbility: 0.0001
Next Token :  sub, Posbility: 0.0001
Next Token : s, Posbility: 0.0000
Choose : sub,  Posbility: 0.9991
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub
---------------------------
Next Token : _, Posbility: 0.9996
Next Token : )], Posbility: 0.0001
Next Token : string, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token : s, Posbility: 0.0000
Choose : _,  Posbility: 0.9996
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_
---------------------------
Next Token : string, Posbility: 0.9985
Next Token : str, Posbility: 0.0010
Next Token : word, Posbility: 0.0001
Next Token : st, Posbility: 0.0001
Next Token : sequence, Posbility: 0.0000
Choose : string,  Posbility: 0.9985
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string
---------------------------
Next Token : )], Posbility: 0.9903
Next Token : )]., Posbility: 0.0065
Next Token : ), Posbility: 0.0019
Next Token : )+, Posbility: 0.0007
Next Token : )-, Posbility: 0.0003
Choose : )],  Posbility: 0.9903
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)]
---------------------------
Next Token :  ==, Posbility: 0.9394
Next Token : ==, Posbility: 0.0446
Next Token : !=, Posbility: 0.0102
Next Token :  in, Posbility: 0.0023
Next Token :   , Posbility: 0.0009
Choose :  ==,  Posbility: 0.9394
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] ==
---------------------------
Next Token :  sub, Posbility: 0.9936
Next Token :   , Posbility: 0.0016
Next Token :  list, Posbility: 0.0006
Next Token :  str, Posbility: 0.0006
Next Token :  subst, Posbility: 0.0006
Choose :  sub,  Posbility: 0.9936
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub
---------------------------
Next Token : _, Posbility: 0.9999
Next Token : :, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : string, Posbility: 0.0000
Next Token : ():, Posbility: 0.0000
Choose : _,  Posbility: 0.9999
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_
---------------------------
Next Token : string, Posbility: 0.9989
Next Token : str, Posbility: 0.0008
Next Token : sub, Posbility: 0.0001
Next Token : sequence, Posbility: 0.0001
Next Token : st, Posbility: 0.0000
Choose : string,  Posbility: 0.9989
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string
---------------------------
Next Token : :, Posbility: 0.9879
Next Token :  :, Posbility: 0.0041
Next Token :  and, Posbility: 0.0020
Next Token : [, Posbility: 0.0015
Next Token : ., Posbility: 0.0012
Choose : :,  Posbility: 0.9879
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
---------------------------
Next Token : 
, Posbility: 0.9871
Next Token :  , Posbility: 0.0056
Next Token :  count, Posbility: 0.0026
Next Token :   , Posbility: 0.0010
Next Token :  #, Posbility: 0.0007
Choose : 
,  Posbility: 0.9871
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:

---------------------------
Next Token :             , Posbility: 0.9910
Next Token :            , Posbility: 0.0035
Next Token :              , Posbility: 0.0014
Next Token :                 , Posbility: 0.0014
Next Token :           , Posbility: 0.0012
Choose :             ,  Posbility: 0.9910
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            
---------------------------
Next Token : count, Posbility: 0.9925
Next Token : print, Posbility: 0.0029
Next Token : if, Posbility: 0.0011
Next Token : #, Posbility: 0.0011
Next Token : 
, Posbility: 0.0004
Choose : count,  Posbility: 0.9925
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count
---------------------------
Next Token :  +=, Posbility: 0.7655
Next Token :  =, Posbility: 0.1226
Next Token : +=, Posbility: 0.1067
Next Token : =, Posbility: 0.0034
Next Token :   , Posbility: 0.0006
Choose :  +=,  Posbility: 0.7655
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count +=
---------------------------
Next Token :  1, Posbility: 0.9157
Next Token : 1, Posbility: 0.0812
Next Token :  i, Posbility: 0.0011
Next Token :  len, Posbility: 0.0009
Next Token :  (, Posbility: 0.0002
Choose :  1,  Posbility: 0.9157
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
---------------------------
Next Token : 
, Posbility: 0.9348
Next Token : 

, Posbility: 0.0489
Next Token :  , Posbility: 0.0069
Next Token :     , Posbility: 0.0021
Next Token :   , Posbility: 0.0013
Choose : 
,  Posbility: 0.9348
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1

---------------------------
Next Token :     , Posbility: 0.9209
Next Token :         , Posbility: 0.0494
Next Token :             , Posbility: 0.0226
Next Token : 
, Posbility: 0.0021
Next Token :  , Posbility: 0.0007
Choose :     ,  Posbility: 0.9209
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    
---------------------------
Next Token : return, Posbility: 0.9146
Next Token : print, Posbility: 0.0571
Next Token : 
, Posbility: 0.0209
Next Token : #, Posbility: 0.0033
Next Token : if, Posbility: 0.0018
Choose : return,  Posbility: 0.9146
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return
---------------------------
Next Token :  count, Posbility: 0.9798
Next Token : (, Posbility: 0.0096
Next Token :  (, Posbility: 0.0057
Next Token :  print, Posbility: 0.0015
Next Token :  str, Posbility: 0.0008
Choose :  count,  Posbility: 0.9798
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count
---------------------------
Next Token : 
, Posbility: 0.8852
Next Token : 

, Posbility: 0.0783
Next Token :  , Posbility: 0.0202
Next Token :     , Posbility: 0.0025
Next Token : ;, Posbility: 0.0016
Choose : 
,  Posbility: 0.8852
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count

---------------------------
Next Token : 
, Posbility: 0.4049
Next Token : '', Posbility: 0.4038
Next Token :     , Posbility: 0.0594
Next Token : print, Posbility: 0.0362
Next Token : string, Posbility: 0.0217
Choose : 
,  Posbility: 0.4049
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


---------------------------
Next Token : 
, Posbility: 0.9242
Next Token :     , Posbility: 0.0338
Next Token : 

, Posbility: 0.0247
Next Token :         , Posbility: 0.0055
Next Token :  , Posbility: 0.0026
Choose : 
,  Posbility: 0.9242
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count



---------------------------
Next Token : '', Posbility: 0.4304
Next Token : 
, Posbility: 0.0981
Next Token : print, Posbility: 0.0935
Next Token : string, Posbility: 0.0884
Next Token : def, Posbility: 0.0811
Choose : '',  Posbility: 0.4304
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


''
---------------------------
Next Token : ', Posbility: 0.9999
Next Token : '/, Posbility: 0.0000
Next Token : '], Posbility: 0.0000
Next Token : '", Posbility: 0.0000
Next Token : '., Posbility: 0.0000
Choose : ',  Posbility: 0.9999
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''
---------------------------
Next Token : Write, Posbility: 0.4004
Next Token : 
, Posbility: 0.3849
Next Token :  Write, Posbility: 0.0437
Next Token : def, Posbility: 0.0098
Next Token : Given, Posbility: 0.0075
Choose : Write,  Posbility: 0.4004
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write
---------------------------
Next Token :  a, Posbility: 0.9868
Next Token :  your, Posbility: 0.0051
Next Token :  an, Posbility: 0.0045
Next Token :  the, Posbility: 0.0008
Next Token :   , Posbility: 0.0004
Choose :  a,  Posbility: 0.9868
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a
---------------------------
Next Token :  python, Posbility: 0.8899
Next Token :  Python, Posbility: 0.0700
Next Token :  function, Posbility: 0.0271
Next Token :  program, Posbility: 0.0042
Next Token :  recursive, Posbility: 0.0020
Choose :  python,  Posbility: 0.8899
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python
---------------------------
Next Token :  function, Posbility: 0.9686
Next Token :  program, Posbility: 0.0189
Next Token :  fun, Posbility: 0.0015
Next Token :  script, Posbility: 0.0015
Next Token :  code, Posbility: 0.0012
Choose :  function,  Posbility: 0.9686
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function
---------------------------
Next Token :  to, Posbility: 0.8205
Next Token :  that, Posbility: 0.1353
Next Token :  which, Posbility: 0.0125
Next Token :  for, Posbility: 0.0045
Next Token : ,, Posbility: 0.0029
Choose :  to,  Posbility: 0.8205
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to
---------------------------
Next Token :  find, Posbility: 0.1496
Next Token :  check, Posbility: 0.1305
Next Token :  count, Posbility: 0.1073
Next Token :  print, Posbility: 0.0966
Next Token :  get, Posbility: 0.0598
Choose :  find,  Posbility: 0.1496
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find
---------------------------
Next Token :  the, Posbility: 0.7372
Next Token :  all, Posbility: 0.0537
Next Token :  a, Posbility: 0.0353
Next Token :  out, Posbility: 0.0262
Next Token :  and, Posbility: 0.0168
Choose :  the,  Posbility: 0.7372
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the
---------------------------
Next Token :  longest, Posbility: 0.3050
Next Token :  number, Posbility: 0.1214
Next Token :  maximum, Posbility: 0.0849
Next Token :  index, Posbility: 0.0586
Next Token :  first, Posbility: 0.0439
Choose :  longest,  Posbility: 0.3050
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest
---------------------------
Next Token :  common, Posbility: 0.3151
Next Token :  subst, Posbility: 0.2201
Next Token :  pal, Posbility: 0.1611
Next Token :  word, Posbility: 0.0504
Next Token :  sub, Posbility: 0.0334
Choose :  common,  Posbility: 0.3151
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common
---------------------------
Next Token :  subst, Posbility: 0.5173
Next Token :  sub, Posbility: 0.1839
Next Token :  prefix, Posbility: 0.1489
Next Token :  subsequ, Posbility: 0.0640
Next Token :  string, Posbility: 0.0405
Choose :  subst,  Posbility: 0.5173
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common subst
---------------------------
Next Token : ring, Posbility: 0.9998
Next Token : ructure, Posbility: 0.0000
Next Token : ition, Posbility: 0.0000
Next Token : ing, Posbility: 0.0000
Next Token : ract, Posbility: 0.0000
Choose : ring,  Posbility: 0.9998
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring
---------------------------
Next Token :  in, Posbility: 0.4068
Next Token :  of, Posbility: 0.2788
Next Token : ., Posbility: 0.0746
Next Token :  among, Posbility: 0.0566
Next Token :  between, Posbility: 0.0326
Choose :  in,  Posbility: 0.4068
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in
---------------------------
Next Token :  two, Posbility: 0.5654
Next Token :  a, Posbility: 0.3198
Next Token :  the, Posbility: 0.0275
Next Token :  an, Posbility: 0.0200
Next Token :  given, Posbility: 0.0130
Choose :  two,  Posbility: 0.5654
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two
---------------------------
Next Token :  given, Posbility: 0.4702
Next Token :  strings, Posbility: 0.4544
Next Token :  lists, Posbility: 0.0164
Next Token :  or, Posbility: 0.0114
Next Token :  string, Posbility: 0.0110
Choose :  given,  Posbility: 0.4702
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given
---------------------------
Next Token :  strings, Posbility: 0.9570
Next Token :  string, Posbility: 0.0147
Next Token :  lists, Posbility: 0.0070
Next Token :  text, Posbility: 0.0047
Next Token :  arrays, Posbility: 0.0022
Choose :  strings,  Posbility: 0.9570
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings
---------------------------
Next Token : .', Posbility: 0.5775
Next Token : ., Posbility: 0.2719
Next Token : '', Posbility: 0.0718
Next Token :  of, Posbility: 0.0187
Next Token : 
, Posbility: 0.0119
Choose : .',  Posbility: 0.5775
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'
---------------------------
Next Token : '', Posbility: 0.9984
Next Token : 
, Posbility: 0.0010
Next Token :  ', Posbility: 0.0002
Next Token :  '', Posbility: 0.0001
Next Token : '''', Posbility: 0.0000
Choose : '',  Posbility: 0.9984
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
---------------------------
Next Token : 
, Posbility: 0.9139
Next Token : 

, Posbility: 0.0647
Next Token : def, Posbility: 0.0068
Next Token :  , Posbility: 0.0061
Next Token :     , Posbility: 0.0022
Choose : 
,  Posbility: 0.9139
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''

---------------------------
Next Token : def, Posbility: 0.8518
Next Token : 
, Posbility: 0.1165
Next Token : #, Posbility: 0.0098
Next Token : '', Posbility: 0.0093
Next Token : import, Posbility: 0.0028
Choose : def,  Posbility: 0.8518
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def
---------------------------
Next Token :  longest, Posbility: 0.6053
Next Token :  find, Posbility: 0.0773
Next Token :  common, Posbility: 0.0548
Next Token :  max, Posbility: 0.0377
Next Token :  , Posbility: 0.0318
Choose :  longest,  Posbility: 0.6053
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest
---------------------------
Next Token : _, Posbility: 0.9276
Next Token : Common, Posbility: 0.0440
Next Token : common, Posbility: 0.0131
Next Token : (, Posbility: 0.0037
Next Token : Sub, Posbility: 0.0023
Choose : _,  Posbility: 0.9276
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_
---------------------------
Next Token : common, Posbility: 0.8577
Next Token : sub, Posbility: 0.0634
Next Token : com, Posbility: 0.0428
Next Token : string, Posbility: 0.0075
Next Token : Common, Posbility: 0.0029
Choose : common,  Posbility: 0.8577
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common
---------------------------
Next Token : _, Posbility: 0.9609
Next Token : (, Posbility: 0.0367
Next Token : ():, Posbility: 0.0008
Next Token : Sub, Posbility: 0.0006
Next Token :  (, Posbility: 0.0001
Choose : _,  Posbility: 0.9609
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_
---------------------------
Next Token : sub, Posbility: 0.9413
Next Token : string, Posbility: 0.0350
Next Token : prefix, Posbility: 0.0079
Next Token : str, Posbility: 0.0049
Next Token : Sub, Posbility: 0.0006
Choose : sub,  Posbility: 0.9413
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_sub
---------------------------
Next Token : string, Posbility: 0.8336
Next Token : _, Posbility: 0.0521
Next Token : (, Posbility: 0.0502
Next Token : str, Posbility: 0.0313
Next Token : st, Posbility: 0.0103
Choose : string,  Posbility: 0.8336
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring
---------------------------
Next Token : (, Posbility: 0.9445
Next Token : _, Posbility: 0.0380
Next Token : ():, Posbility: 0.0052
Next Token :  (, Posbility: 0.0047
Next Token : 2, Posbility: 0.0043
Choose : (,  Posbility: 0.9445
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(
---------------------------
Next Token : string, Posbility: 0.6853
Next Token : str, Posbility: 0.1158
Next Token : s, Posbility: 0.0958
Next Token : a, Posbility: 0.0467
Next Token : first, Posbility: 0.0054
Choose : string,  Posbility: 0.6853
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string
---------------------------
Next Token : 1, Posbility: 0.7789
Next Token : _, Posbility: 0.1085
Next Token : ,, Posbility: 0.0987
Next Token : A, Posbility: 0.0057
Next Token : a, Posbility: 0.0027
Choose : 1,  Posbility: 0.7789
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1
---------------------------
Next Token : ,, Posbility: 0.9949
Next Token : :, Posbility: 0.0033
Next Token : ,, Posbility: 0.0011
Next Token : _, Posbility: 0.0004
Next Token : ):, Posbility: 0.0001
Choose : ,,  Posbility: 0.9949
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1,
---------------------------
Next Token :  string, Posbility: 0.9578
Next Token : string, Posbility: 0.0324
Next Token :  s, Posbility: 0.0013
Next Token :  str, Posbility: 0.0010
Next Token :  subst, Posbility: 0.0009
Choose :  string,  Posbility: 0.9578
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string
---------------------------
Next Token : 2, Posbility: 0.9995
Next Token : 1, Posbility: 0.0003
Next Token : _, Posbility: 0.0001
Next Token : ):, Posbility: 0.0000
Next Token :  2, Posbility: 0.0000
Choose : 2,  Posbility: 0.9995
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2
---------------------------
Next Token : ):, Posbility: 0.9825
Next Token : ,, Posbility: 0.0151
Next Token : ), Posbility: 0.0016
Next Token :  ):, Posbility: 0.0006
Next Token : ,, Posbility: 0.0000
Choose : ):,  Posbility: 0.9825
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
---------------------------
Next Token : 
, Posbility: 0.9736
Next Token : 

, Posbility: 0.0195
Next Token :  , Posbility: 0.0043
Next Token :   , Posbility: 0.0008
Next Token :     , Posbility: 0.0006
Choose : 
,  Posbility: 0.9736
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):

---------------------------
Next Token :     , Posbility: 0.9825
Next Token : 	, Posbility: 0.0055
Next Token :   , Posbility: 0.0032
Next Token :         , Posbility: 0.0029
Next Token :    , Posbility: 0.0017
Choose :     ,  Posbility: 0.9825
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    
---------------------------
Next Token : long, Posbility: 0.1274
Next Token : if, Posbility: 0.1028
Next Token : l, Posbility: 0.0906
Next Token : max, Posbility: 0.0781
Next Token : count, Posbility: 0.0514
Choose : long,  Posbility: 0.1274
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    long
---------------------------
Next Token : est, Posbility: 0.9668
Next Token : _, Posbility: 0.0189
Next Token :  =, Posbility: 0.0065
Next Token : er, Posbility: 0.0038
Next Token : ests, Posbility: 0.0008
Choose : est,  Posbility: 0.9668
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest
---------------------------
Next Token : _, Posbility: 0.5913
Next Token :  =, Posbility: 0.3908
Next Token : ,, Posbility: 0.0059
Next Token : =, Posbility: 0.0020
Next Token : 1, Posbility: 0.0019
Choose : _,  Posbility: 0.5913
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_
---------------------------
Next Token : common, Posbility: 0.3400
Next Token : sub, Posbility: 0.2972
Next Token : len, Posbility: 0.0543
Next Token : length, Posbility: 0.0471
Next Token : string, Posbility: 0.0463
Choose : common,  Posbility: 0.3400
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common
---------------------------
Next Token : _, Posbility: 0.8047
Next Token :  =, Posbility: 0.1885
Next Token : ,, Posbility: 0.0040
Next Token : =, Posbility: 0.0014
Next Token :   , Posbility: 0.0003
Choose : _,  Posbility: 0.8047
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_
---------------------------
Next Token : sub, Posbility: 0.8641
Next Token : string, Posbility: 0.0589
Next Token : str, Posbility: 0.0152
Next Token : length, Posbility: 0.0146
Next Token : len, Posbility: 0.0123
Choose : sub,  Posbility: 0.8641
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_sub
---------------------------
Next Token : string, Posbility: 0.7500
Next Token :  =, Posbility: 0.1727
Next Token : _, Posbility: 0.0333
Next Token : str, Posbility: 0.0178
Next Token : st, Posbility: 0.0116
Choose : string,  Posbility: 0.7500
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring
---------------------------
Next Token :  =, Posbility: 0.6410
Next Token : _, Posbility: 0.3388
Next Token : 1, Posbility: 0.0076
Next Token : =, Posbility: 0.0055
Next Token : ,, Posbility: 0.0037
Choose :  =,  Posbility: 0.6410
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring =
---------------------------
Next Token :  '', Posbility: 0.3950
Next Token :  "", Posbility: 0.3411
Next Token :  0, Posbility: 0.1257
Next Token :  [], Posbility: 0.0426
Next Token :  string, Posbility: 0.0174
Choose :  '',  Posbility: 0.3950
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
---------------------------
Next Token : 
, Posbility: 0.9311
Next Token : 

, Posbility: 0.0535
Next Token :  , Posbility: 0.0063
Next Token : ;, Posbility: 0.0023
Next Token :  #, Posbility: 0.0021
Choose : 
,  Posbility: 0.9311
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''

---------------------------
Next Token :     , Posbility: 0.9951
Next Token : 	, Posbility: 0.0012
Next Token :    , Posbility: 0.0009
Next Token :  , Posbility: 0.0007
Next Token :   , Posbility: 0.0006
Choose :     ,  Posbility: 0.9951
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    
---------------------------
Next Token : for, Posbility: 0.2924
Next Token : i, Posbility: 0.0999
Next Token : count, Posbility: 0.0516
Next Token : long, Posbility: 0.0512
Next Token : max, Posbility: 0.0444
Choose : for,  Posbility: 0.2924
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for
---------------------------
Next Token :  i, Posbility: 0.8927
Next Token :  char, Posbility: 0.0149
Next Token :  index, Posbility: 0.0137
Next Token :  j, Posbility: 0.0109
Next Token :  s, Posbility: 0.0075
Choose :  i,  Posbility: 0.8927
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i
---------------------------
Next Token :  in, Posbility: 0.9828
Next Token : ,, Posbility: 0.0135
Next Token : 1, Posbility: 0.0028
Next Token : _, Posbility: 0.0005
Next Token :   , Posbility: 0.0001
Choose :  in,  Posbility: 0.9828
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in
---------------------------
Next Token :  range, Posbility: 0.9901
Next Token :  string, Posbility: 0.0070
Next Token :  list, Posbility: 0.0008
Next Token :  set, Posbility: 0.0007
Next Token :  [, Posbility: 0.0002
Choose :  range,  Posbility: 0.9901
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range
---------------------------
Next Token : (, Posbility: 0.9899
Next Token :  (, Posbility: 0.0077
Next Token : ((, Posbility: 0.0019
Next Token : (-, Posbility: 0.0003
Next Token : ():, Posbility: 0.0000
Choose : (,  Posbility: 0.9899
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(
---------------------------
Next Token : len, Posbility: 0.8279
Next Token : min, Posbility: 0.1045
Next Token : 0, Posbility: 0.0252
Next Token : max, Posbility: 0.0243
Next Token : 1, Posbility: 0.0053
Choose : len,  Posbility: 0.8279
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len
---------------------------
Next Token : (, Posbility: 0.9997
Next Token : ((, Posbility: 0.0001
Next Token :  (, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Choose : (,  Posbility: 0.9997
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(
---------------------------
Next Token : string, Posbility: 0.9957
Next Token : max, Posbility: 0.0018
Next Token : min, Posbility: 0.0011
Next Token :  string, Posbility: 0.0003
Next Token : s, Posbility: 0.0003
Choose : string,  Posbility: 0.9957
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string
---------------------------
Next Token : 1, Posbility: 0.9703
Next Token : 2, Posbility: 0.0296
Next Token : ), Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Choose : 1,  Posbility: 0.9703
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1
---------------------------
Next Token : ), Posbility: 0.8864
Next Token : )+, Posbility: 0.0602
Next Token : )-, Posbility: 0.0437
Next Token : ),, Posbility: 0.0029
Next Token : [, Posbility: 0.0026
Choose : ),  Posbility: 0.8864
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)
---------------------------
Next Token : ):, Posbility: 0.9163
Next Token :  +, Posbility: 0.0538
Next Token :  -, Posbility: 0.0294
Next Token :  ):, Posbility: 0.0002
Next Token : ,, Posbility: 0.0001
Choose : ):,  Posbility: 0.9163
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
---------------------------
Next Token : 
, Posbility: 0.9914
Next Token : 

, Posbility: 0.0027
Next Token :  , Posbility: 0.0025
Next Token :  #, Posbility: 0.0012
Next Token :   , Posbility: 0.0007
Choose : 
,  Posbility: 0.9914
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):

---------------------------
Next Token :         , Posbility: 0.9926
Next Token :             , Posbility: 0.0027
Next Token :       , Posbility: 0.0012
Next Token :        , Posbility: 0.0010
Next Token :     , Posbility: 0.0008
Choose :         ,  Posbility: 0.9926
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        
---------------------------
Next Token : for, Posbility: 0.5534
Next Token : if, Posbility: 0.2764
Next Token : sub, Posbility: 0.0266
Next Token : count, Posbility: 0.0244
Next Token : temp, Posbility: 0.0096
Choose : for,  Posbility: 0.5534
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for
---------------------------
Next Token :  j, Posbility: 0.9701
Next Token :  k, Posbility: 0.0209
Next Token :  x, Posbility: 0.0013
Next Token :  y, Posbility: 0.0010
Next Token :  s, Posbility: 0.0008
Choose :  j,  Posbility: 0.9701
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j
---------------------------
Next Token :  in, Posbility: 0.9994
Next Token : ,, Posbility: 0.0003
Next Token :   , Posbility: 0.0002
Next Token :  , Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Choose :  in,  Posbility: 0.9994
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in
---------------------------
Next Token :  range, Posbility: 0.9996
Next Token :   , Posbility: 0.0002
Next Token :  string, Posbility: 0.0001
Next Token :  reversed, Posbility: 0.0000
Next Token :  str, Posbility: 0.0000
Choose :  range,  Posbility: 0.9996
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range
---------------------------
Next Token : (, Posbility: 0.9981
Next Token :  (, Posbility: 0.0016
Next Token : ((, Posbility: 0.0002
Next Token : :, Posbility: 0.0000
Next Token : (-, Posbility: 0.0000
Choose : (,  Posbility: 0.9981
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(
---------------------------
Next Token : len, Posbility: 0.9845
Next Token : i, Posbility: 0.0096
Next Token : 0, Posbility: 0.0027
Next Token :  len, Posbility: 0.0018
Next Token : min, Posbility: 0.0004
Choose : len,  Posbility: 0.9845
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len
---------------------------
Next Token : (, Posbility: 0.9999
Next Token :  (, Posbility: 0.0001
Next Token : _, Posbility: 0.0000
Next Token : ):, Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Choose : (,  Posbility: 0.9999
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(
---------------------------
Next Token : string, Posbility: 0.9993
Next Token : sub, Posbility: 0.0004
Next Token :  string, Posbility: 0.0001
Next Token : s, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Choose : string,  Posbility: 0.9993
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string
---------------------------
Next Token : 2, Posbility: 0.9798
Next Token : 1, Posbility: 0.0202
Next Token : _, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Next Token :  2, Posbility: 0.0000
Choose : 2,  Posbility: 0.9798
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2
---------------------------
Next Token : ), Posbility: 0.9964
Next Token : )-, Posbility: 0.0016
Next Token : )+, Posbility: 0.0009
Next Token : [, Posbility: 0.0008
Next Token : )), Posbility: 0.0001
Choose : ),  Posbility: 0.9964
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)
---------------------------
Next Token : ):, Posbility: 0.9995
Next Token :  -, Posbility: 0.0004
Next Token :  ):, Posbility: 0.0000
Next Token :  +, Posbility: 0.0000
Next Token : //, Posbility: 0.0000
Choose : ):,  Posbility: 0.9995
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
---------------------------
Next Token : 
, Posbility: 0.9926
Next Token : 

, Posbility: 0.0043
Next Token :  , Posbility: 0.0016
Next Token :   , Posbility: 0.0003
Next Token :     , Posbility: 0.0002
Choose : 
,  Posbility: 0.9926
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):

---------------------------
Next Token :             , Posbility: 0.9938
Next Token :            , Posbility: 0.0017
Next Token :                 , Posbility: 0.0013
Next Token :              , Posbility: 0.0008
Next Token :         , Posbility: 0.0006
Choose :             ,  Posbility: 0.9938
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            
---------------------------
Next Token : if, Posbility: 0.9205
Next Token : sub, Posbility: 0.0179
Next Token : #, Posbility: 0.0109
Next Token : count, Posbility: 0.0072
Next Token : common, Posbility: 0.0056
Choose : if,  Posbility: 0.9205
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if
---------------------------
Next Token :  string, Posbility: 0.9184
Next Token :  (, Posbility: 0.0303
Next Token : (, Posbility: 0.0181
Next Token :  len, Posbility: 0.0072
Next Token :  i, Posbility: 0.0071
Choose :  string,  Posbility: 0.9184
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string
---------------------------
Next Token : 1, Posbility: 0.9919
Next Token : 2, Posbility: 0.0077
Next Token : _, Posbility: 0.0002
Next Token : [, Posbility: 0.0001
Next Token : (, Posbility: 0.0000
Choose : 1,  Posbility: 0.9919
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1
---------------------------
Next Token : [, Posbility: 0.9989
Next Token :  ==, Posbility: 0.0008
Next Token : ., Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token : !=, Posbility: 0.0000
Choose : [,  Posbility: 0.9989
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[
---------------------------
Next Token : i, Posbility: 0.9990
Next Token : j, Posbility: 0.0006
Next Token : :, Posbility: 0.0001
Next Token : 0, Posbility: 0.0001
Next Token : len, Posbility: 0.0000
Choose : i,  Posbility: 0.9990
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i
---------------------------
Next Token : :, Posbility: 0.5892
Next Token : ], Posbility: 0.4027
Next Token :  :, Posbility: 0.0031
Next Token : :], Posbility: 0.0017
Next Token : ]., Posbility: 0.0016
Choose : :,  Posbility: 0.5892
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:
---------------------------
Next Token : i, Posbility: 0.9870
Next Token :  i, Posbility: 0.0053
Next Token : j, Posbility: 0.0040
Next Token : len, Posbility: 0.0027
Next Token : ]., Posbility: 0.0003
Choose : i,  Posbility: 0.9870
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i
---------------------------
Next Token : +, Posbility: 0.9437
Next Token :  +, Posbility: 0.0556
Next Token : +(, Posbility: 0.0006
Next Token : ], Posbility: 0.0001
Next Token :   , Posbility: 0.0000
Choose : +,  Posbility: 0.9437
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+
---------------------------
Next Token : len, Posbility: 0.9959
Next Token :  len, Posbility: 0.0010
Next Token : j, Posbility: 0.0010
Next Token : 2, Posbility: 0.0006
Next Token : 1, Posbility: 0.0004
Choose : len,  Posbility: 0.9959
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len
---------------------------
Next Token : (, Posbility: 0.9999
Next Token : ], Posbility: 0.0000
Next Token : ((, Posbility: 0.0000
Next Token : (", Posbility: 0.0000
Next Token : (', Posbility: 0.0000
Choose : (,  Posbility: 0.9999
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(
---------------------------
Next Token : string, Posbility: 0.9728
Next Token : sub, Posbility: 0.0238
Next Token : long, Posbility: 0.0011
Next Token : str, Posbility: 0.0011
Next Token :  string, Posbility: 0.0001
Choose : string,  Posbility: 0.9728
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string
---------------------------
Next Token : 2, Posbility: 0.9802
Next Token : 1, Posbility: 0.0181
Next Token : _, Posbility: 0.0009
Next Token : )], Posbility: 0.0004
Next Token : ), Posbility: 0.0002
Choose : 2,  Posbility: 0.9802
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2
---------------------------
Next Token : )], Posbility: 0.9669
Next Token : [, Posbility: 0.0266
Next Token : ), Posbility: 0.0039
Next Token : )]., Posbility: 0.0017
Next Token : )-, Posbility: 0.0003
Choose : )],  Posbility: 0.9669
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)]
---------------------------
Next Token :  ==, Posbility: 0.9837
Next Token :  in, Posbility: 0.0083
Next Token : !=, Posbility: 0.0033
Next Token : ==, Posbility: 0.0017
Next Token :   , Posbility: 0.0007
Choose :  ==,  Posbility: 0.9837
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] ==
---------------------------
Next Token :  string, Posbility: 0.9943
Next Token :   , Posbility: 0.0011
Next Token :  list, Posbility: 0.0010
Next Token : string, Posbility: 0.0006
Next Token :  (, Posbility: 0.0006
Choose :  string,  Posbility: 0.9943
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string
---------------------------
Next Token : 2, Posbility: 0.9985
Next Token : 1, Posbility: 0.0014
Next Token : [, Posbility: 0.0001
Next Token : _, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Choose : 2,  Posbility: 0.9985
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2
---------------------------
Next Token : [, Posbility: 0.9579
Next Token : :, Posbility: 0.0404
Next Token :  and, Posbility: 0.0011
Next Token :  [, Posbility: 0.0001
Next Token :  :, Posbility: 0.0001
Choose : [,  Posbility: 0.9579
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[
---------------------------
Next Token : j, Posbility: 0.9961
Next Token : :, Posbility: 0.0026
Next Token : i, Posbility: 0.0008
Next Token : 0, Posbility: 0.0003
Next Token : 
, Posbility: 0.0001
Choose : j,  Posbility: 0.9961
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j
---------------------------
Next Token : :, Posbility: 0.9973
Next Token : ]:, Posbility: 0.0010
Next Token :  :, Posbility: 0.0004
Next Token : :(, Posbility: 0.0004
Next Token : ::, Posbility: 0.0002
Choose : :,  Posbility: 0.9973
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:
---------------------------
Next Token : j, Posbility: 0.9978
Next Token :  j, Posbility: 0.0014
Next Token : len, Posbility: 0.0003
Next Token : ]:, Posbility: 0.0002
Next Token : i, Posbility: 0.0001
Choose : j,  Posbility: 0.9978
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j
---------------------------
Next Token : +, Posbility: 0.9929
Next Token :  +, Posbility: 0.0068
Next Token : +(, Posbility: 0.0001
Next Token : ], Posbility: 0.0000
Next Token : ]:, Posbility: 0.0000
Choose : +,  Posbility: 0.9929
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+
---------------------------
Next Token : len, Posbility: 0.9994
Next Token :  len, Posbility: 0.0003
Next Token : 
, Posbility: 0.0001
Next Token : 1, Posbility: 0.0000
Next Token : length, Posbility: 0.0000
Choose : len,  Posbility: 0.9994
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len
---------------------------
Next Token : (, Posbility: 0.9999
Next Token :  (, Posbility: 0.0000
Next Token : (", Posbility: 0.0000
Next Token : ((, Posbility: 0.0000
Next Token : (', Posbility: 0.0000
Choose : (,  Posbility: 0.9999
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(
---------------------------
Next Token : string, Posbility: 0.9905
Next Token : sub, Posbility: 0.0073
Next Token : long, Posbility: 0.0009
Next Token : str, Posbility: 0.0005
Next Token :  string, Posbility: 0.0001
Choose : string,  Posbility: 0.9905
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string
---------------------------
Next Token : 2, Posbility: 0.9514
Next Token : 1, Posbility: 0.0479
Next Token : ), Posbility: 0.0003
Next Token : 3, Posbility: 0.0002
Next Token : _, Posbility: 0.0000
Choose : 2,  Posbility: 0.9514
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2
---------------------------
Next Token : ), Posbility: 0.9990
Next Token : )], Posbility: 0.0007
Next Token : )]., Posbility: 0.0001
Next Token : )-, Posbility: 0.0001
Next Token : [, Posbility: 0.0001
Choose : ),  Posbility: 0.9990
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)
---------------------------
Next Token : ]:, Posbility: 0.9996
Next Token : ):, Posbility: 0.0001
Next Token : ][, Posbility: 0.0001
Next Token : 
, Posbility: 0.0000
Next Token :  ], Posbility: 0.0000
Choose : ]:,  Posbility: 0.9996
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
---------------------------
Next Token : 
, Posbility: 0.9927
Next Token :  , Posbility: 0.0024
Next Token : 

, Posbility: 0.0018
Next Token :  #, Posbility: 0.0009
Next Token :   , Posbility: 0.0006
Choose : 
,  Posbility: 0.9927
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:

---------------------------
Next Token :                 , Posbility: 0.9929
Next Token :                     , Posbility: 0.0025
Next Token :             , Posbility: 0.0013
Next Token :                , Posbility: 0.0011
Next Token :                  , Posbility: 0.0007
Choose :                 ,  Posbility: 0.9929
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                
---------------------------
Next Token : if, Posbility: 0.9309
Next Token : long, Posbility: 0.0132
Next Token : break, Posbility: 0.0092
Next Token : #, Posbility: 0.0081
Next Token : print, Posbility: 0.0052
Choose : if,  Posbility: 0.9309
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if
---------------------------
Next Token :  len, Posbility: 0.9222
Next Token :  i, Posbility: 0.0286
Next Token :  (, Posbility: 0.0154
Next Token :  j, Posbility: 0.0122
Next Token :  not, Posbility: 0.0048
Choose :  len,  Posbility: 0.9222
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len
---------------------------
Next Token : (, Posbility: 0.9987
Next Token : ([, Posbility: 0.0004
Next Token :  (, Posbility: 0.0003
Next Token : (', Posbility: 0.0002
Next Token : ((, Posbility: 0.0002
Choose : (,  Posbility: 0.9987
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(
---------------------------
Next Token : long, Posbility: 0.6343
Next Token : string, Posbility: 0.3512
Next Token : str, Posbility: 0.0075
Next Token : set, Posbility: 0.0010
Next Token : common, Posbility: 0.0009
Choose : long,  Posbility: 0.6343
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(long
---------------------------
Next Token : est, Posbility: 1.0000
Next Token : gest, Posbility: 0.0000
Next Token : er, Posbility: 0.0000
Next Token : este, Posbility: 0.0000
Next Token : es, Posbility: 0.0000
Choose : est,  Posbility: 1.0000
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest
---------------------------
Next Token : _, Posbility: 1.0000
Next Token : ), Posbility: 0.0000
Next Token : Common, Posbility: 0.0000
Next Token : ):, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Choose : _,  Posbility: 1.0000
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_
---------------------------
Next Token : common, Posbility: 0.9999
Next Token : com, Posbility: 0.0000
Next Token : comm, Posbility: 0.0000
Next Token : comb, Posbility: 0.0000
Next Token : sub, Posbility: 0.0000
Choose : common,  Posbility: 0.9999
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common
---------------------------
Next Token : _, Posbility: 1.0000
Next Token : ), Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : ):, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Choose : _,  Posbility: 1.0000
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_
---------------------------
Next Token : sub, Posbility: 1.0000
Next Token : string, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : char, Posbility: 0.0000
Next Token : text, Posbility: 0.0000
Choose : sub,  Posbility: 1.0000
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_sub
---------------------------
Next Token : string, Posbility: 0.9999
Next Token : str, Posbility: 0.0001
Next Token : sequence, Posbility: 0.0000
Next Token :  string, Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Choose : string,  Posbility: 0.9999
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring
---------------------------
Next Token : ), Posbility: 0.9947
Next Token : ., Posbility: 0.0010
Next Token : )+, Posbility: 0.0010
Next Token :  or, Posbility: 0.0009
Next Token : )!, Posbility: 0.0008
Choose : ),  Posbility: 0.9947
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring)
---------------------------
Next Token :  <, Posbility: 0.8366
Next Token :  >, Posbility: 0.0979
Next Token :  <=, Posbility: 0.0354
Next Token :  ==, Posbility: 0.0163
Next Token :  >=, Posbility: 0.0052
Choose :  <,  Posbility: 0.8366
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) <
---------------------------
Next Token :  len, Posbility: 0.8774
Next Token :  j, Posbility: 0.1002
Next Token :  (, Posbility: 0.0134
Next Token :  i, Posbility: 0.0029
Next Token : len, Posbility: 0.0011
Choose :  len,  Posbility: 0.8774
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len
---------------------------
Next Token : (, Posbility: 0.9992
Next Token : (', Posbility: 0.0003
Next Token :  (, Posbility: 0.0003
Next Token : (", Posbility: 0.0001
Next Token : ([, Posbility: 0.0001
Choose : (,  Posbility: 0.9992
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(
---------------------------
Next Token : string, Posbility: 0.9901
Next Token : 
, Posbility: 0.0033
Next Token : str, Posbility: 0.0025
Next Token : long, Posbility: 0.0015
Next Token : list, Posbility: 0.0006
Choose : string,  Posbility: 0.9901
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string
---------------------------
Next Token : 1, Posbility: 0.9284
Next Token : 2, Posbility: 0.0710
Next Token : [, Posbility: 0.0003
Next Token : (, Posbility: 0.0001
Next Token : 3, Posbility: 0.0000
Choose : 1,  Posbility: 0.9284
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1
---------------------------
Next Token : [, Posbility: 0.8956
Next Token : ):, Posbility: 0.0572
Next Token : ), Posbility: 0.0327
Next Token : )+, Posbility: 0.0083
Next Token : )-, Posbility: 0.0035
Choose : [,  Posbility: 0.8956
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[
---------------------------
Next Token : i, Posbility: 0.9877
Next Token : :, Posbility: 0.0095
Next Token : 0, Posbility: 0.0017
Next Token : (, Posbility: 0.0005
Next Token : j, Posbility: 0.0002
Choose : i,  Posbility: 0.9877
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i
---------------------------
Next Token : :, Posbility: 0.9319
Next Token : :], Posbility: 0.0433
Next Token : ], Posbility: 0.0102
Next Token : -, Posbility: 0.0036
Next Token :  :, Posbility: 0.0030
Choose : :,  Posbility: 0.9319
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:
---------------------------
Next Token : i, Posbility: 0.9984
Next Token :  i, Posbility: 0.0006
Next Token : j, Posbility: 0.0005
Next Token : ]), Posbility: 0.0003
Next Token : len, Posbility: 0.0001
Choose : i,  Posbility: 0.9984
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i
---------------------------
Next Token : +, Posbility: 0.9897
Next Token :  +, Posbility: 0.0080
Next Token : ], Posbility: 0.0012
Next Token : +(, Posbility: 0.0004
Next Token : ]), Posbility: 0.0002
Choose : +,  Posbility: 0.9897
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+
---------------------------
Next Token : len, Posbility: 0.9985
Next Token : 1, Posbility: 0.0004
Next Token :  len, Posbility: 0.0002
Next Token : j, Posbility: 0.0002
Next Token : 
, Posbility: 0.0001
Choose : len,  Posbility: 0.9985
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len
---------------------------
Next Token : (, Posbility: 0.9999
Next Token : ], Posbility: 0.0000
Next Token : (", Posbility: 0.0000
Next Token : (', Posbility: 0.0000
Next Token : ([, Posbility: 0.0000
Choose : (,  Posbility: 0.9999
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(
---------------------------
Next Token : string, Posbility: 0.9976
Next Token : sub, Posbility: 0.0014
Next Token : 
, Posbility: 0.0004
Next Token : str, Posbility: 0.0003
Next Token :  string, Posbility: 0.0000
Choose : string,  Posbility: 0.9976
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string
---------------------------
Next Token : 2, Posbility: 0.9810
Next Token : 1, Posbility: 0.0189
Next Token : ), Posbility: 0.0000
Next Token : )], Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Choose : 2,  Posbility: 0.9810
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2
---------------------------
Next Token : )], Posbility: 0.9226
Next Token : ), Posbility: 0.0764
Next Token : ):, Posbility: 0.0004
Next Token : ]], Posbility: 0.0002
Next Token : )+, Posbility: 0.0001
Choose : )],  Posbility: 0.9226
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]
---------------------------
Next Token : ):, Posbility: 0.9966
Next Token :  +, Posbility: 0.0014
Next Token : 
, Posbility: 0.0008
Next Token :  ):, Posbility: 0.0003
Next Token :  or, Posbility: 0.0002
Choose : ):,  Posbility: 0.9966
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
---------------------------
Next Token : 
, Posbility: 0.9943
Next Token :  , Posbility: 0.0043
Next Token :  #, Posbility: 0.0004
Next Token :   , Posbility: 0.0003
Next Token : 

, Posbility: 0.0002
Choose : 
,  Posbility: 0.9943
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):

---------------------------
Next Token :                     , Posbility: 0.9955
Next Token :                    , Posbility: 0.0012
Next Token :                      , Posbility: 0.0011
Next Token :                         , Posbility: 0.0011
Next Token :                 , Posbility: 0.0002
Choose :                     ,  Posbility: 0.9955
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    
---------------------------
Next Token : long, Posbility: 0.9844
Next Token : if, Posbility: 0.0066
Next Token : print, Posbility: 0.0011
Next Token : #, Posbility: 0.0011
Next Token : continue, Posbility: 0.0008
Choose : long,  Posbility: 0.9844
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    long
---------------------------
Next Token : est, Posbility: 0.9997
Next Token : _, Posbility: 0.0001
Next Token :  =, Posbility: 0.0001
Next Token : es, Posbility: 0.0000
Next Token : er, Posbility: 0.0000
Choose : est,  Posbility: 0.9997
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    longest
---------------------------
Next Token : _, Posbility: 0.9998
Next Token :  =, Posbility: 0.0002
Next Token : =, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Choose : _,  Posbility: 0.9998
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    longest_
---------------------------
Next Token : common, Posbility: 0.9998
Next Token : comb, Posbility: 0.0001
Next Token : com, Posbility: 0.0000
Next Token : sub, Posbility: 0.0000
Next Token : comm, Posbility: 0.0000
Choose : common,  Posbility: 0.9998
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    longest_common
---------------------------
Next Token : _, Posbility: 0.9997
Next Token :  =, Posbility: 0.0003
Next Token : ., Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Choose : _,  Posbility: 0.9997
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    longest_common_
---------------------------
Next Token : sub, Posbility: 0.9996
Next Token : string, Posbility: 0.0003
Next Token : str, Posbility: 0.0000
Next Token : char, Posbility: 0.0000
Next Token : index, Posbility: 0.0000
Choose : sub,  Posbility: 0.9996
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    longest_common_sub
---------------------------
Next Token : string, Posbility: 0.9998
Next Token : str, Posbility: 0.0001
Next Token : sequence, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : st, Posbility: 0.0000
Choose : string,  Posbility: 0.9998
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    longest_common_substring
---------------------------
Next Token :  =, Posbility: 0.9976
Next Token : =, Posbility: 0.0011
Next Token :   , Posbility: 0.0006
Next Token :  +=, Posbility: 0.0003
Next Token : ,, Posbility: 0.0001
Choose :  =,  Posbility: 0.9976
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    longest_common_substring =
---------------------------
Next Token :  string, Posbility: 0.9932
Next Token :  str, Posbility: 0.0023
Next Token :   , Posbility: 0.0014
Next Token :  (, Posbility: 0.0011
Next Token :  list, Posbility: 0.0005
Choose :  string,  Posbility: 0.9932
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    longest_common_substring = string
---------------------------
Next Token : 1, Posbility: 0.9917
Next Token : 2, Posbility: 0.0045
Next Token : [, Posbility: 0.0036
Next Token : _, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Choose : 1,  Posbility: 0.9917
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    longest_common_substring = string1
---------------------------
Next Token : [, Posbility: 0.9998
Next Token : 
, Posbility: 0.0001
Next Token :  [, Posbility: 0.0001
Next Token : ., Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Choose : [,  Posbility: 0.9998
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    longest_common_substring = string1[
---------------------------
Next Token : i, Posbility: 0.9997
Next Token : 
, Posbility: 0.0001
Next Token : j, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Choose : i,  Posbility: 0.9997
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    longest_common_substring = string1[i
---------------------------
Next Token : :, Posbility: 0.9992
Next Token :  :, Posbility: 0.0003
Next Token : :], Posbility: 0.0002
Next Token : :(, Posbility: 0.0001
Next Token : +, Posbility: 0.0001
Choose : :,  Posbility: 0.9992
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    longest_common_substring = string1[i:
---------------------------
Next Token : i, Posbility: 0.9987
Next Token :  i, Posbility: 0.0011
Next Token : j, Posbility: 0.0001
Next Token : 
, Posbility: 0.0000
Next Token : len, Posbility: 0.0000
Choose : i,  Posbility: 0.9987
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    longest_common_substring = string1[i:i
---------------------------
Next Token : +, Posbility: 0.9952
Next Token :  +, Posbility: 0.0046
Next Token : +(, Posbility: 0.0002
Next Token : ], Posbility: 0.0000
Next Token : ]+, Posbility: 0.0000
Choose : +,  Posbility: 0.9952
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    longest_common_substring = string1[i:i+
---------------------------
Next Token : len, Posbility: 0.9997
Next Token :  len, Posbility: 0.0002
Next Token : 
, Posbility: 0.0000
Next Token : j, Posbility: 0.0000
Next Token : max, Posbility: 0.0000
Choose : len,  Posbility: 0.9997
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    longest_common_substring = string1[i:i+len
---------------------------
Next Token : (, Posbility: 1.0000
Next Token :  (, Posbility: 0.0000
Next Token : (", Posbility: 0.0000
Next Token : ], Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Choose : (,  Posbility: 1.0000
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    longest_common_substring = string1[i:i+len(
---------------------------
Next Token : string, Posbility: 0.9988
Next Token : sub, Posbility: 0.0008
Next Token : 
, Posbility: 0.0002
Next Token : str, Posbility: 0.0001
Next Token :  string, Posbility: 0.0000
Choose : string,  Posbility: 0.9988
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    longest_common_substring = string1[i:i+len(string
---------------------------
Next Token : 2, Posbility: 0.9992
Next Token : 1, Posbility: 0.0008
Next Token : _, Posbility: 0.0000
Next Token :  2, Posbility: 0.0000
Next Token : 3, Posbility: 0.0000
Choose : 2,  Posbility: 0.9992
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    longest_common_substring = string1[i:i+len(string2
---------------------------
Next Token : )], Posbility: 0.9910
Next Token : ), Posbility: 0.0084
Next Token : )]., Posbility: 0.0003
Next Token : )+, Posbility: 0.0002
Next Token : )-, Posbility: 0.0000
Choose : )],  Posbility: 0.9910
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    longest_common_substring = string1[i:i+len(string2)]
---------------------------
Next Token : 
, Posbility: 0.8796
Next Token : 

, Posbility: 0.1081
Next Token :  , Posbility: 0.0055
Next Token :     , Posbility: 0.0013
Next Token :                     , Posbility: 0.0007
Choose : 
,  Posbility: 0.8796
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    longest_common_substring = string1[i:i+len(string2)]

---------------------------
Next Token :     , Posbility: 0.8674
Next Token :                 , Posbility: 0.0879
Next Token :                     , Posbility: 0.0183
Next Token :             , Posbility: 0.0139
Next Token :         , Posbility: 0.0084
Choose :     ,  Posbility: 0.8674
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    longest_common_substring = string1[i:i+len(string2)]
    
---------------------------
Next Token : return, Posbility: 0.9437
Next Token : 
, Posbility: 0.0239
Next Token : print, Posbility: 0.0188
Next Token : if, Posbility: 0.0080
Next Token : #, Posbility: 0.0018
Choose : return,  Posbility: 0.9437
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    longest_common_substring = string1[i:i+len(string2)]
    return
---------------------------
Next Token :  longest, Posbility: 0.9826
Next Token :  len, Posbility: 0.0058
Next Token : (, Posbility: 0.0034
Next Token :  (, Posbility: 0.0018
Next Token :   , Posbility: 0.0012
Choose :  longest,  Posbility: 0.9826
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    longest_common_substring = string1[i:i+len(string2)]
    return longest
---------------------------
Next Token : _, Posbility: 1.0000
Next Token : 
, Posbility: 0.0000
Next Token : 

, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Choose : _,  Posbility: 1.0000
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    longest_common_substring = string1[i:i+len(string2)]
    return longest_
---------------------------
Next Token : common, Posbility: 1.0000
Next Token : com, Posbility: 0.0000
Next Token : comm, Posbility: 0.0000
Next Token : comb, Posbility: 0.0000
Next Token : shared, Posbility: 0.0000
Choose : common,  Posbility: 1.0000
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    longest_common_substring = string1[i:i+len(string2)]
    return longest_common
---------------------------
Next Token : _, Posbility: 1.0000
Next Token : 

, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Choose : _,  Posbility: 1.0000
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    longest_common_substring = string1[i:i+len(string2)]
    return longest_common_
---------------------------
Next Token : sub, Posbility: 1.0000
Next Token : string, Posbility: 0.0000
Next Token : str, Posbility: 0.0000
Next Token : common, Posbility: 0.0000
Next Token : subject, Posbility: 0.0000
Choose : sub,  Posbility: 1.0000
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    longest_common_substring = string1[i:i+len(string2)]
    return longest_common_sub
---------------------------
Next Token : string, Posbility: 1.0000
Next Token : str, Posbility: 0.0000
Next Token : sequence, Posbility: 0.0000
Next Token :  string, Posbility: 0.0000
Next Token : ring, Posbility: 0.0000
Choose : string,  Posbility: 1.0000
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    longest_common_substring = string1[i:i+len(string2)]
    return longest_common_substring
---------------------------
Next Token : 

, Posbility: 0.6441
Next Token : 
, Posbility: 0.3324
Next Token :  , Posbility: 0.0067
Next Token : ., Posbility: 0.0032
Next Token : ,, Posbility: 0.0025
Choose : 

,  Posbility: 0.6441
---------------------------
'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    longest_common_substring = string1[i:i+len(string2)]
    return longest_common_substring


---------------------------
Next Token : 
, Posbility: 0.9646
Next Token : 

, Posbility: 0.0235
Next Token :     , Posbility: 0.0049
Next Token : <|endoftext|>, Posbility: 0.0020
Next Token :         , Posbility: 0.0011
EOS token!!!
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



processing time : 54.638893842697144



----------Syntax Error-----------

'''Write a python function to count the number of non-empty substrings of a given string.'''
def 
'''
def count_substring(string, sub_string):
    count = 0
    for i in range(len(string)):
        if string[i:i+len(sub_string)] == sub_string:
            count += 1
    return count


'''Write a python function to find the longest common substring in two given strings.'''
def longest_common_substring(string1, string2):
    longest_common_substring = ''
    for i in range(len(string1)):
        for j in range(len(string2)):
            if string1[i:i+len(string2)] == string2[j:j+len(string2)]:
                if len(longest_common_substring) < len(string1[i:i+len(string2)]):
                    longest_common_substring = string1[i:i+len(string2)]
    return longest_common_substring





Error Start : (2, 4), Error End (3, 0)

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>

<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>