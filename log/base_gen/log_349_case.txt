<<<<<<<<<<<< 349 problem >>>>>>>>>>>




Next Token : 
, Posbility: 0.1488
Next Token : xt, Posbility: 0.1275
Next Token : ix, Posbility: 0.0953
Next Token : iban, Posbility: 0.0869
Next Token : ____, Posbility: 0.0761
Choose : 
,  Posbility: 0.1488
'''Write a function to extract values between quotation marks " " of the given string.'''
def 

---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 

---------------------------
Next Token : '', Posbility: 0.1425
Next Token : #, Posbility: 0.1069
Next Token : import, Posbility: 0.0886
Next Token : 
, Posbility: 0.0649
Next Token : def, Posbility: 0.0529
Choose : '',  Posbility: 0.1425
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
''
---------------------------
Next Token : ', Posbility: 0.9882
Next Token : '., Posbility: 0.0024
Next Token : '", Posbility: 0.0017
Next Token : '/, Posbility: 0.0014
Next Token : 
, Posbility: 0.0008
Choose : ',  Posbility: 0.9882
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
---------------------------
Next Token : 
, Posbility: 0.1727
Next Token : Write, Posbility: 0.0749
Next Token :  Write, Posbility: 0.0188
Next Token : Ext, Posbility: 0.0187
Next Token : This, Posbility: 0.0179
Choose : 
,  Posbility: 0.1727
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''

---------------------------
Next Token : def, Posbility: 0.0771
Next Token :     , Posbility: 0.0737
Next Token : 
, Posbility: 0.0726
Next Token : '', Posbility: 0.0344
Next Token : print, Posbility: 0.0231
Choose : def,  Posbility: 0.0771
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def
---------------------------
Next Token :  extract, Posbility: 0.1408
Next Token :  get, Posbility: 0.0778
Next Token :  print, Posbility: 0.0302
Next Token :  write, Posbility: 0.0286
Next Token :  main, Posbility: 0.0275
Choose :  extract,  Posbility: 0.1408
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract
---------------------------
Next Token : _, Posbility: 0.7400
Next Token : (, Posbility: 0.0859
Next Token : Qu, Posbility: 0.0366
Next Token : Values, Posbility: 0.0188
Next Token : Value, Posbility: 0.0110
Choose : _,  Posbility: 0.7400
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_
---------------------------
Next Token : qu, Posbility: 0.3054
Next Token : values, Posbility: 0.2133
Next Token : between, Posbility: 0.0685
Next Token : from, Posbility: 0.0330
Next Token : value, Posbility: 0.0219
Choose : qu,  Posbility: 0.3054
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_qu
---------------------------
Next Token : otation, Posbility: 0.7159
Next Token : ot, Posbility: 0.1073
Next Token : otes, Posbility: 0.0920
Next Token : oted, Posbility: 0.0141
Next Token : _, Posbility: 0.0105
Choose : otation,  Posbility: 0.7159
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation
---------------------------
Next Token : _, Posbility: 0.9203
Next Token : (, Posbility: 0.0648
Next Token : ():, Posbility: 0.0047
Next Token : marks, Posbility: 0.0034
Next Token :  (, Posbility: 0.0015
Choose : _,  Posbility: 0.9203
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_
---------------------------
Next Token : marks, Posbility: 0.6430
Next Token : mark, Posbility: 0.3101
Next Token : from, Posbility: 0.0051
Next Token : ch, Posbility: 0.0023
Next Token : m, Posbility: 0.0020
Choose : marks,  Posbility: 0.6430
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks
---------------------------
Next Token : (, Posbility: 0.8526
Next Token : _, Posbility: 0.0884
Next Token : ():, Posbility: 0.0228
Next Token :  (, Posbility: 0.0195
Next Token : (*, Posbility: 0.0031
Choose : (,  Posbility: 0.8526
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(
---------------------------
Next Token : string, Posbility: 0.3381
Next Token : str, Posbility: 0.1651
Next Token : text, Posbility: 0.0897
Next Token : s, Posbility: 0.0797
Next Token : input, Posbility: 0.0559
Choose : string,  Posbility: 0.3381
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string
---------------------------
Next Token : ):, Posbility: 0.8653
Next Token : _, Posbility: 0.0502
Next Token : ,, Posbility: 0.0447
Next Token : :, Posbility: 0.0199
Next Token : ), Posbility: 0.0079
Choose : ):,  Posbility: 0.8653
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
---------------------------
Next Token : 
, Posbility: 0.9044
Next Token : 

, Posbility: 0.0521
Next Token :  , Posbility: 0.0258
Next Token :   , Posbility: 0.0046
Next Token :  #, Posbility: 0.0036
Choose : 
,  Posbility: 0.9044
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):

---------------------------
Next Token :     , Posbility: 0.8064
Next Token : 	, Posbility: 0.0551
Next Token :   , Posbility: 0.0445
Next Token : '', Posbility: 0.0262
Next Token :    , Posbility: 0.0181
Choose :     ,  Posbility: 0.8064
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    
---------------------------
Next Token : '', Posbility: 0.1957
Next Token : return, Posbility: 0.1008
Next Token : qu, Posbility: 0.0770
Next Token : #, Posbility: 0.0711
Next Token : if, Posbility: 0.0407
Choose : '',  Posbility: 0.1957
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    ''
---------------------------
Next Token : ', Posbility: 0.9990
Next Token : '", Posbility: 0.0003
Next Token : 
, Posbility: 0.0003
Next Token : '/, Posbility: 0.0001
Next Token : '-, Posbility: 0.0001
Choose : ',  Posbility: 0.9990
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
---------------------------
Next Token : 
, Posbility: 0.3434
Next Token : Ext, Posbility: 0.0711
Next Token : This, Posbility: 0.0588
Next Token : Function, Posbility: 0.0491
Next Token : Return, Posbility: 0.0415
Choose : 
,  Posbility: 0.3434
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''

---------------------------
Next Token :     , Posbility: 0.9312
Next Token :         , Posbility: 0.0427
Next Token :      , Posbility: 0.0043
Next Token : 	, Posbility: 0.0024
Next Token :        , Posbility: 0.0020
Choose :     ,  Posbility: 0.9312
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    
---------------------------
Next Token : This, Posbility: 0.1043
Next Token : Input, Posbility: 0.0518
Next Token : Function, Posbility: 0.0456
Next Token : string, Posbility: 0.0445
Next Token : Ext, Posbility: 0.0420
Choose : This,  Posbility: 0.1043
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This
---------------------------
Next Token :  function, Posbility: 0.8844
Next Token :  is, Posbility: 0.0250
Next Token :  method, Posbility: 0.0158
Next Token :  functions, Posbility: 0.0100
Next Token :  Function, Posbility: 0.0093
Choose :  function,  Posbility: 0.8844
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function
---------------------------
Next Token :  takes, Posbility: 0.3366
Next Token :  will, Posbility: 0.1199
Next Token :  returns, Posbility: 0.0892
Next Token :  is, Posbility: 0.0785
Next Token :  extracts, Posbility: 0.0475
Choose :  takes,  Posbility: 0.3366
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes
---------------------------
Next Token :  a, Posbility: 0.4954
Next Token :  in, Posbility: 0.1909
Next Token :  the, Posbility: 0.0794
Next Token :  as, Posbility: 0.0591
Next Token :  string, Posbility: 0.0534
Choose :  a,  Posbility: 0.4954
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a
---------------------------
Next Token :  string, Posbility: 0.8622
Next Token :  given, Posbility: 0.0711
Next Token :  single, Posbility: 0.0070
Next Token :  input, Posbility: 0.0061
Next Token :  String, Posbility: 0.0043
Choose :  string,  Posbility: 0.8622
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string
---------------------------
Next Token :  as, Posbility: 0.4287
Next Token :  and, Posbility: 0.2813
Next Token : ,, Posbility: 0.0365
Next Token :  of, Posbility: 0.0280
Next Token :  with, Posbility: 0.0210
Choose :  as,  Posbility: 0.4287
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as
---------------------------
Next Token :  input, Posbility: 0.5111
Next Token :  an, Posbility: 0.2102
Next Token :  a, Posbility: 0.1001
Next Token :  argument, Posbility: 0.0543
Next Token :  parameter, Posbility: 0.0503
Choose :  input,  Posbility: 0.5111
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input
---------------------------
Next Token :  and, Posbility: 0.6362
Next Token : ., Posbility: 0.0964
Next Token : ,, Posbility: 0.0887
Next Token : 
, Posbility: 0.0454
Next Token :  as, Posbility: 0.0225
Choose :  and,  Posbility: 0.6362
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and
---------------------------
Next Token :  returns, Posbility: 0.4887
Next Token :  return, Posbility: 0.0986
Next Token :  prints, Posbility: 0.0408
Next Token : 
, Posbility: 0.0310
Next Token :  extract, Posbility: 0.0306
Choose :  returns,  Posbility: 0.4887
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns
---------------------------
Next Token :  a, Posbility: 0.3697
Next Token :  the, Posbility: 0.3082
Next Token :  it, Posbility: 0.0762
Next Token :  all, Posbility: 0.0333
Next Token :  only, Posbility: 0.0311
Choose :  a,  Posbility: 0.3697
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a
---------------------------
Next Token :  list, Posbility: 0.5057
Next Token :  string, Posbility: 0.1654
Next Token :  new, Posbility: 0.0924
Next Token :  tuple, Posbility: 0.0422
Next Token :  dictionary, Posbility: 0.0337
Choose :  list,  Posbility: 0.5057
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list
---------------------------
Next Token :  of, Posbility: 0.6462
Next Token :  containing, Posbility: 0.0797
Next Token :  with, Posbility: 0.0621
Next Token : 
, Posbility: 0.0493
Next Token : ., Posbility: 0.0305
Choose :  of,  Posbility: 0.6462
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of
---------------------------
Next Token :  all, Posbility: 0.2381
Next Token :  the, Posbility: 0.2081
Next Token :  strings, Posbility: 0.0554
Next Token :  , Posbility: 0.0453
Next Token : 
, Posbility: 0.0425
Choose :  all,  Posbility: 0.2381
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all
---------------------------
Next Token :  the, Posbility: 0.4344
Next Token :  quotation, Posbility: 0.0774
Next Token :  values, Posbility: 0.0718
Next Token : 
, Posbility: 0.0671
Next Token :  , Posbility: 0.0403
Choose :  the,  Posbility: 0.4344
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the
---------------------------
Next Token :  quotation, Posbility: 0.2121
Next Token :  values, Posbility: 0.1173
Next Token :  characters, Posbility: 0.1044
Next Token : 
, Posbility: 0.0964
Next Token :  , Posbility: 0.0776
Choose :  quotation,  Posbility: 0.2121
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation
---------------------------
Next Token :  marks, Posbility: 0.9252
Next Token : 
, Posbility: 0.0317
Next Token :  mark, Posbility: 0.0160
Next Token :  , Posbility: 0.0124
Next Token :  characters, Posbility: 0.0015
Choose :  marks,  Posbility: 0.9252
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks
---------------------------
Next Token :  in, Posbility: 0.1776
Next Token : ., Posbility: 0.1554
Next Token : 
, Posbility: 0.0955
Next Token :  present, Posbility: 0.0875
Next Token :  of, Posbility: 0.0535
Choose :  in,  Posbility: 0.1776
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in
---------------------------
Next Token :  the, Posbility: 0.6406
Next Token :  that, Posbility: 0.1220
Next Token :  it, Posbility: 0.0902
Next Token :  string, Posbility: 0.0350
Next Token :  a, Posbility: 0.0336
Choose :  the,  Posbility: 0.6406
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the
---------------------------
Next Token :  string, Posbility: 0.6734
Next Token :  input, Posbility: 0.1291
Next Token :  given, Posbility: 0.1217
Next Token : 
, Posbility: 0.0109
Next Token :  , Posbility: 0.0103
Choose :  string,  Posbility: 0.6734
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string
---------------------------
Next Token : ., Posbility: 0.7218
Next Token : 
, Posbility: 0.0692
Next Token : ,, Posbility: 0.0251
Next Token :  separated, Posbility: 0.0178
Next Token :  as, Posbility: 0.0116
Choose : .,  Posbility: 0.7218
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
---------------------------
Next Token : 
, Posbility: 0.7421
Next Token : 

, Posbility: 0.1003
Next Token :  , Posbility: 0.0719
Next Token :  The, Posbility: 0.0120
Next Token :  If, Posbility: 0.0088
Choose : 
,  Posbility: 0.7421
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.

---------------------------
Next Token :     , Posbility: 0.9830
Next Token :         , Posbility: 0.0060
Next Token :      , Posbility: 0.0025
Next Token : '', Posbility: 0.0020
Next Token :   , Posbility: 0.0008
Choose :     ,  Posbility: 0.9830
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    
---------------------------
Next Token : '', Posbility: 0.3195
Next Token : 
, Posbility: 0.1069
Next Token : The, Posbility: 0.0755
Next Token : :, Posbility: 0.0527
Next Token : For, Posbility: 0.0373
Choose : '',  Posbility: 0.3195
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    ''
---------------------------
Next Token : ', Posbility: 0.9999
Next Token : 
, Posbility: 0.0000
Next Token : '", Posbility: 0.0000
Next Token :  ', Posbility: 0.0000
Next Token : '', Posbility: 0.0000
Choose : ',  Posbility: 0.9999
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
---------------------------
Next Token : 
, Posbility: 0.9332
Next Token : 

, Posbility: 0.0504
Next Token :  , Posbility: 0.0083
Next Token :     , Posbility: 0.0035
Next Token :   , Posbility: 0.0014
Choose : 
,  Posbility: 0.9332
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''

---------------------------
Next Token :     , Posbility: 0.9820
Next Token : 
, Posbility: 0.0036
Next Token : def, Posbility: 0.0032
Next Token :   , Posbility: 0.0021
Next Token :         , Posbility: 0.0014
Choose :     ,  Posbility: 0.9820
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    
---------------------------
Next Token : qu, Posbility: 0.2523
Next Token : return, Posbility: 0.1430
Next Token : '', Posbility: 0.0582
Next Token : #, Posbility: 0.0581
Next Token : list, Posbility: 0.0547
Choose : qu,  Posbility: 0.2523
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    qu
---------------------------
Next Token : otation, Posbility: 0.7352
Next Token : ot, Posbility: 0.1973
Next Token : otes, Posbility: 0.0429
Next Token : o, Posbility: 0.0043
Next Token : oting, Posbility: 0.0040
Choose : otation,  Posbility: 0.7352
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation
---------------------------
Next Token : _, Posbility: 0.9509
Next Token :  =, Posbility: 0.0279
Next Token : marks, Posbility: 0.0106
Next Token : =, Posbility: 0.0043
Next Token : Mark, Posbility: 0.0012
Choose : _,  Posbility: 0.9509
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_
---------------------------
Next Token : marks, Posbility: 0.9356
Next Token : mark, Posbility: 0.0470
Next Token : list, Posbility: 0.0057
Next Token : m, Posbility: 0.0010
Next Token : dict, Posbility: 0.0005
Choose : marks,  Posbility: 0.9356
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks
---------------------------
Next Token :  =, Posbility: 0.7217
Next Token : _, Posbility: 0.1625
Next Token : =, Posbility: 0.1007
Next Token : =[, Posbility: 0.0057
Next Token : ="", Posbility: 0.0019
Choose :  =,  Posbility: 0.7217
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks =
---------------------------
Next Token :  [], Posbility: 0.5728
Next Token :  [', Posbility: 0.1328
Next Token :  list, Posbility: 0.0698
Next Token :  string, Posbility: 0.0531
Next Token :  [, Posbility: 0.0526
Choose :  [],  Posbility: 0.5728
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
---------------------------
Next Token : 
, Posbility: 0.8868
Next Token : 

, Posbility: 0.0774
Next Token :  #, Posbility: 0.0129
Next Token :  , Posbility: 0.0090
Next Token :     , Posbility: 0.0038
Choose : 
,  Posbility: 0.8868
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []

---------------------------
Next Token :     , Posbility: 0.9949
Next Token :         , Posbility: 0.0009
Next Token :    , Posbility: 0.0008
Next Token :  , Posbility: 0.0008
Next Token :   , Posbility: 0.0007
Choose :     ,  Posbility: 0.9949
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    
---------------------------
Next Token : for, Posbility: 0.4457
Next Token : qu, Posbility: 0.0737
Next Token : 
, Posbility: 0.0714
Next Token : #, Posbility: 0.0360
Next Token : string, Posbility: 0.0350
Choose : for,  Posbility: 0.4457
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for
---------------------------
Next Token :  i, Posbility: 0.4683
Next Token :  char, Posbility: 0.2020
Next Token :  character, Posbility: 0.0502
Next Token :  index, Posbility: 0.0294
Next Token :  letter, Posbility: 0.0281
Choose :  i,  Posbility: 0.4683
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i
---------------------------
Next Token :  in, Posbility: 0.9750
Next Token : ,, Posbility: 0.0234
Next Token : _, Posbility: 0.0007
Next Token :   , Posbility: 0.0005
Next Token : ,, Posbility: 0.0002
Choose :  in,  Posbility: 0.9750
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in
---------------------------
Next Token :  string, Posbility: 0.5561
Next Token :  range, Posbility: 0.4252
Next Token :  list, Posbility: 0.0077
Next Token :  str, Posbility: 0.0024
Next Token :  (, Posbility: 0.0015
Choose :  string,  Posbility: 0.5561
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string
---------------------------
Next Token : :, Posbility: 0.9116
Next Token : ., Posbility: 0.0747
Next Token :  :, Posbility: 0.0076
Next Token : [, Posbility: 0.0045
Next Token : _, Posbility: 0.0002
Choose : :,  Posbility: 0.9116
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
---------------------------
Next Token : 
, Posbility: 0.9740
Next Token :  , Posbility: 0.0087
Next Token : 

, Posbility: 0.0066
Next Token :  #, Posbility: 0.0048
Next Token :   , Posbility: 0.0015
Choose : 
,  Posbility: 0.9740
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:

---------------------------
Next Token :         , Posbility: 0.9813
Next Token :     , Posbility: 0.0047
Next Token :             , Posbility: 0.0045
Next Token :       , Posbility: 0.0040
Next Token :        , Posbility: 0.0025
Choose :         ,  Posbility: 0.9813
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        
---------------------------
Next Token : if, Posbility: 0.9637
Next Token : qu, Posbility: 0.0089
Next Token : #, Posbility: 0.0060
Next Token : for, Posbility: 0.0029
Next Token : '', Posbility: 0.0023
Choose : if,  Posbility: 0.9637
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if
---------------------------
Next Token :  i, Posbility: 0.8848
Next Token :  (, Posbility: 0.0328
Next Token : (, Posbility: 0.0302
Next Token :  ', Posbility: 0.0138
Next Token :  string, Posbility: 0.0080
Choose :  i,  Posbility: 0.8848
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i
---------------------------
Next Token :  ==, Posbility: 0.6992
Next Token :  in, Posbility: 0.1266
Next Token : !=, Posbility: 0.0773
Next Token : ==, Posbility: 0.0444
Next Token : ., Posbility: 0.0218
Choose :  ==,  Posbility: 0.6992
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i ==
---------------------------
Next Token :  ', Posbility: 0.6244
Next Token :  ", Posbility: 0.3127
Next Token :  "', Posbility: 0.0301
Next Token : ', Posbility: 0.0086
Next Token : '", Posbility: 0.0037
Choose :  ',  Posbility: 0.6244
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '
---------------------------
Next Token : ", Posbility: 0.4103
Next Token :  ', Posbility: 0.3687
Next Token : "', Posbility: 0.1077
Next Token : �, Posbility: 0.0280
Next Token : \", Posbility: 0.0209
Choose : ",  Posbility: 0.4103
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"
---------------------------
Next Token : ':, Posbility: 0.9973
Next Token :  ', Posbility: 0.0011
Next Token : '., Posbility: 0.0007
Next Token : ';, Posbility: 0.0003
Next Token : \, Posbility: 0.0001
Choose : ':,  Posbility: 0.9973
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
---------------------------
Next Token : 
, Posbility: 0.9844
Next Token :  , Posbility: 0.0055
Next Token :  #, Posbility: 0.0034
Next Token :   , Posbility: 0.0013
Next Token :     , Posbility: 0.0006
Choose : 
,  Posbility: 0.9844
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':

---------------------------
Next Token :             , Posbility: 0.9889
Next Token :            , Posbility: 0.0044
Next Token :                 , Posbility: 0.0023
Next Token :              , Posbility: 0.0014
Next Token :           , Posbility: 0.0014
Choose :             ,  Posbility: 0.9889
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            
---------------------------
Next Token : qu, Posbility: 0.8882
Next Token : if, Posbility: 0.0553
Next Token : break, Posbility: 0.0062
Next Token : i, Posbility: 0.0061
Next Token : j, Posbility: 0.0042
Choose : qu,  Posbility: 0.8882
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            qu
---------------------------
Next Token : otation, Posbility: 0.9992
Next Token : ot, Posbility: 0.0004
Next Token : otion, Posbility: 0.0002
Next Token : oting, Posbility: 0.0001
Next Token : ota, Posbility: 0.0000
Choose : otation,  Posbility: 0.9992
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation
---------------------------
Next Token : _, Posbility: 0.9976
Next Token :  =, Posbility: 0.0023
Next Token : =, Posbility: 0.0000
Next Token : Mark, Posbility: 0.0000
Next Token : marks, Posbility: 0.0000
Choose : _,  Posbility: 0.9976
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_
---------------------------
Next Token : marks, Posbility: 0.9988
Next Token : mark, Posbility: 0.0011
Next Token : ends, Posbility: 0.0000
Next Token :  marks, Posbility: 0.0000
Next Token : marked, Posbility: 0.0000
Choose : marks,  Posbility: 0.9988
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks
---------------------------
Next Token : ., Posbility: 0.9929
Next Token :  +=, Posbility: 0.0025
Next Token :  =, Posbility: 0.0023
Next Token : [, Posbility: 0.0016
Next Token : _, Posbility: 0.0002
Choose : .,  Posbility: 0.9929
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.
---------------------------
Next Token : append, Posbility: 0.9977
Next Token : insert, Posbility: 0.0012
Next Token : ext, Posbility: 0.0007
Next Token : pop, Posbility: 0.0002
Next Token : remove, Posbility: 0.0001
Choose : append,  Posbility: 0.9977
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append
---------------------------
Next Token : (', Posbility: 0.5359
Next Token : (, Posbility: 0.3391
Next Token : (", Posbility: 0.1233
Next Token :  (', Posbility: 0.0006
Next Token : ((, Posbility: 0.0003
Choose : (',  Posbility: 0.5359
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('
---------------------------
Next Token : ", Posbility: 0.9048
Next Token : "', Posbility: 0.0537
Next Token :  ", Posbility: 0.0133
Next Token :  ', Posbility: 0.0069
Next Token : \", Posbility: 0.0029
Choose : ",  Posbility: 0.9048
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"
---------------------------
Next Token : '), Posbility: 0.9975
Next Token :  ', Posbility: 0.0014
Next Token : ');, Posbility: 0.0004
Next Token : \, Posbility: 0.0002
Next Token :  ", Posbility: 0.0002
Choose : '),  Posbility: 0.9975
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
---------------------------
Next Token : 
, Posbility: 0.9703
Next Token : 

, Posbility: 0.0126
Next Token :  , Posbility: 0.0048
Next Token :  #, Posbility: 0.0031
Next Token :     , Posbility: 0.0018
Choose : 
,  Posbility: 0.9703
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')

---------------------------
Next Token :         , Posbility: 0.8808
Next Token :     , Posbility: 0.0671
Next Token :             , Posbility: 0.0482
Next Token : 
, Posbility: 0.0013
Next Token :                 , Posbility: 0.0004
Choose :         ,  Posbility: 0.8808
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        
---------------------------
Next Token : el, Posbility: 0.4993
Next Token : else, Posbility: 0.3756
Next Token : if, Posbility: 0.1068
Next Token : 
, Posbility: 0.0116
Next Token : qu, Posbility: 0.0020
Choose : el,  Posbility: 0.4993
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        el
---------------------------
Next Token : if, Posbility: 1.0000
Next Token : 
, Posbility: 0.0000
Next Token :  if, Posbility: 0.0000
Next Token : im, Posbility: 0.0000
Next Token : is, Posbility: 0.0000
Choose : if,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif
---------------------------
Next Token :  i, Posbility: 0.9711
Next Token :  not, Posbility: 0.0068
Next Token :  len, Posbility: 0.0050
Next Token :  (, Posbility: 0.0047
Next Token :  ', Posbility: 0.0029
Choose :  i,  Posbility: 0.9711
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i
---------------------------
Next Token :  ==, Posbility: 0.9249
Next Token : !=, Posbility: 0.0303
Next Token : ==, Posbility: 0.0168
Next Token :  in, Posbility: 0.0128
Next Token : ., Posbility: 0.0055
Choose :  ==,  Posbility: 0.9249
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i ==
---------------------------
Next Token :  "', Posbility: 0.4264
Next Token :  ', Posbility: 0.3169
Next Token :  ", Posbility: 0.2362
Next Token :  "\, Posbility: 0.0044
Next Token : ', Posbility: 0.0026
Choose :  "',  Posbility: 0.4264
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'
---------------------------
Next Token : ":, Posbility: 0.9507
Next Token : ", Posbility: 0.0469
Next Token : s, Posbility: 0.0010
Next Token : ":", Posbility: 0.0004
Next Token : \, Posbility: 0.0001
Choose : ":,  Posbility: 0.9507
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
---------------------------
Next Token : 
, Posbility: 0.9933
Next Token :  , Posbility: 0.0041
Next Token :  #, Posbility: 0.0006
Next Token :     , Posbility: 0.0005
Next Token :   , Posbility: 0.0004
Choose : 
,  Posbility: 0.9933
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":

---------------------------
Next Token :             , Posbility: 0.9969
Next Token :                 , Posbility: 0.0012
Next Token :              , Posbility: 0.0008
Next Token :            , Posbility: 0.0006
Next Token :         , Posbility: 0.0002
Choose :             ,  Posbility: 0.9969
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            
---------------------------
Next Token : qu, Posbility: 0.9717
Next Token : if, Posbility: 0.0109
Next Token : pass, Posbility: 0.0027
Next Token : i, Posbility: 0.0022
Next Token : continue, Posbility: 0.0013
Choose : qu,  Posbility: 0.9717
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            qu
---------------------------
Next Token : otation, Posbility: 0.9999
Next Token : ot, Posbility: 0.0001
Next Token : oting, Posbility: 0.0000
Next Token : otion, Posbility: 0.0000
Next Token : itation, Posbility: 0.0000
Choose : otation,  Posbility: 0.9999
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation
---------------------------
Next Token : _, Posbility: 0.9998
Next Token :  =, Posbility: 0.0002
Next Token : ., Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Choose : _,  Posbility: 0.9998
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_
---------------------------
Next Token : marks, Posbility: 0.9996
Next Token : mark, Posbility: 0.0003
Next Token :  marks, Posbility: 0.0000
Next Token : flags, Posbility: 0.0000
Next Token : marked, Posbility: 0.0000
Choose : marks,  Posbility: 0.9996
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks
---------------------------
Next Token : ., Posbility: 0.9991
Next Token : [, Posbility: 0.0004
Next Token :  =, Posbility: 0.0002
Next Token :  +=, Posbility: 0.0002
Next Token : ., Posbility: 0.0000
Choose : .,  Posbility: 0.9991
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.
---------------------------
Next Token : append, Posbility: 0.9994
Next Token : insert, Posbility: 0.0002
Next Token : ext, Posbility: 0.0001
Next Token : clear, Posbility: 0.0001
Next Token : pop, Posbility: 0.0000
Choose : append,  Posbility: 0.9994
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append
---------------------------
Next Token : (', Posbility: 0.8077
Next Token : (", Posbility: 0.1788
Next Token : (, Posbility: 0.0132
Next Token :  (', Posbility: 0.0002
Next Token :  (", Posbility: 0.0000
Choose : (',  Posbility: 0.8077
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('
---------------------------
Next Token : ", Posbility: 0.8279
Next Token : \, Posbility: 0.1105
Next Token : \', Posbility: 0.0216
Next Token : \\, Posbility: 0.0112
Next Token : "', Posbility: 0.0089
Choose : ",  Posbility: 0.8279
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"
---------------------------
Next Token : '), Posbility: 0.9995
Next Token : \, Posbility: 0.0002
Next Token :  ', Posbility: 0.0001
Next Token : \', Posbility: 0.0001
Next Token : ');, Posbility: 0.0000
Choose : '),  Posbility: 0.9995
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
---------------------------
Next Token : 
, Posbility: 0.9783
Next Token : 

, Posbility: 0.0129
Next Token :  , Posbility: 0.0029
Next Token :     , Posbility: 0.0014
Next Token :         , Posbility: 0.0008
Choose : 
,  Posbility: 0.9783
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')

---------------------------
Next Token :         , Posbility: 0.8023
Next Token :     , Posbility: 0.1785
Next Token :             , Posbility: 0.0133
Next Token : 
, Posbility: 0.0031
Next Token : '', Posbility: 0.0005
Choose :         ,  Posbility: 0.8023
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        
---------------------------
Next Token : el, Posbility: 0.5539
Next Token : else, Posbility: 0.4192
Next Token : 
, Posbility: 0.0100
Next Token : if, Posbility: 0.0084
Next Token : #, Posbility: 0.0025
Choose : el,  Posbility: 0.5539
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        el
---------------------------
Next Token : if, Posbility: 1.0000
Next Token :  if, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ast, Posbility: 0.0000
Next Token : im, Posbility: 0.0000
Choose : if,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif
---------------------------
Next Token :  i, Posbility: 0.9662
Next Token :  not, Posbility: 0.0084
Next Token :  len, Posbility: 0.0064
Next Token :  (, Posbility: 0.0058
Next Token :  ord, Posbility: 0.0034
Choose :  i,  Posbility: 0.9662
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i
---------------------------
Next Token :  ==, Posbility: 0.9171
Next Token : !=, Posbility: 0.0274
Next Token :  in, Posbility: 0.0221
Next Token : ., Posbility: 0.0163
Next Token : ==, Posbility: 0.0084
Choose :  ==,  Posbility: 0.9171
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i ==
---------------------------
Next Token :  ', Posbility: 0.4022
Next Token :  ", Posbility: 0.3970
Next Token :  "', Posbility: 0.0623
Next Token :  i, Posbility: 0.0214
Next Token :  "{, Posbility: 0.0194
Choose :  ',  Posbility: 0.4022
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == '
---------------------------
Next Token :  ', Posbility: 0.3115
Next Token : ,', Posbility: 0.1911
Next Token : \, Posbility: 0.0779
Next Token : ), Posbility: 0.0571
Next Token : ?', Posbility: 0.0386
Choose :  ',  Posbility: 0.3115
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' '
---------------------------
Next Token : :, Posbility: 0.7934
Next Token :  or, Posbility: 0.1448
Next Token :  and, Posbility: 0.0587
Next Token :  :, Posbility: 0.0014
Next Token : 
, Posbility: 0.0004
Choose : :,  Posbility: 0.7934
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
---------------------------
Next Token : 
, Posbility: 0.9946
Next Token :  , Posbility: 0.0023
Next Token :  #, Posbility: 0.0009
Next Token :   , Posbility: 0.0004
Next Token :     , Posbility: 0.0003
Choose : 
,  Posbility: 0.9946
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':

---------------------------
Next Token :             , Posbility: 0.9963
Next Token :                 , Posbility: 0.0015
Next Token :            , Posbility: 0.0008
Next Token :              , Posbility: 0.0008
Next Token :           , Posbility: 0.0002
Choose :             ,  Posbility: 0.9963
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            
---------------------------
Next Token : qu, Posbility: 0.9289
Next Token : pass, Posbility: 0.0291
Next Token : if, Posbility: 0.0137
Next Token : continue, Posbility: 0.0137
Next Token : break, Posbility: 0.0029
Choose : qu,  Posbility: 0.9289
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            qu
---------------------------
Next Token : otation, Posbility: 0.9999
Next Token : ot, Posbility: 0.0001
Next Token : oting, Posbility: 0.0000
Next Token : otion, Posbility: 0.0000
Next Token : itation, Posbility: 0.0000
Choose : otation,  Posbility: 0.9999
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation
---------------------------
Next Token : _, Posbility: 0.9998
Next Token :  =, Posbility: 0.0002
Next Token : ., Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Choose : _,  Posbility: 0.9998
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_
---------------------------
Next Token : marks, Posbility: 0.9996
Next Token : mark, Posbility: 0.0003
Next Token :  marks, Posbility: 0.0000
Next Token : flags, Posbility: 0.0000
Next Token : marked, Posbility: 0.0000
Choose : marks,  Posbility: 0.9996
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks
---------------------------
Next Token : ., Posbility: 0.9980
Next Token : [, Posbility: 0.0009
Next Token :  =, Posbility: 0.0008
Next Token :  +=, Posbility: 0.0002
Next Token : ., Posbility: 0.0000
Choose : .,  Posbility: 0.9980
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.
---------------------------
Next Token : append, Posbility: 0.9973
Next Token : ext, Posbility: 0.0012
Next Token : clear, Posbility: 0.0007
Next Token : pop, Posbility: 0.0004
Next Token : insert, Posbility: 0.0002
Choose : append,  Posbility: 0.9973
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append
---------------------------
Next Token : (', Posbility: 0.9087
Next Token : (", Posbility: 0.0558
Next Token : (, Posbility: 0.0351
Next Token : (), Posbility: 0.0002
Next Token :  (', Posbility: 0.0002
Choose : (',  Posbility: 0.9087
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append('
---------------------------
Next Token :  ', Posbility: 0.9115
Next Token : ", Posbility: 0.0281
Next Token :  ", Posbility: 0.0205
Next Token : \, Posbility: 0.0077
Next Token :   , Posbility: 0.0075
Choose :  ',  Posbility: 0.9115
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' '
---------------------------
Next Token : ), Posbility: 0.9992
Next Token :  ), Posbility: 0.0004
Next Token : );, Posbility: 0.0002
Next Token : *, Posbility: 0.0000
Next Token :  *, Posbility: 0.0000
Choose : ),  Posbility: 0.9992
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
---------------------------
Next Token : 
, Posbility: 0.9648
Next Token : 

, Posbility: 0.0213
Next Token :  , Posbility: 0.0042
Next Token :     , Posbility: 0.0026
Next Token :         , Posbility: 0.0012
Choose : 
,  Posbility: 0.9648
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')

---------------------------
Next Token :         , Posbility: 0.7303
Next Token :     , Posbility: 0.2559
Next Token :             , Posbility: 0.0075
Next Token : 
, Posbility: 0.0033
Next Token : '', Posbility: 0.0009
Choose :         ,  Posbility: 0.7303
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        
---------------------------
Next Token : el, Posbility: 0.6788
Next Token : else, Posbility: 0.3057
Next Token : 
, Posbility: 0.0078
Next Token : if, Posbility: 0.0030
Next Token : #, Posbility: 0.0020
Choose : el,  Posbility: 0.6788
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        el
---------------------------
Next Token : if, Posbility: 1.0000
Next Token : 
, Posbility: 0.0000
Next Token : else, Posbility: 0.0000
Next Token :  if, Posbility: 0.0000
Next Token : ig, Posbility: 0.0000
Choose : if,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif
---------------------------
Next Token :  i, Posbility: 0.9777
Next Token :  ord, Posbility: 0.0052
Next Token :  not, Posbility: 0.0046
Next Token :  len, Posbility: 0.0042
Next Token :  ', Posbility: 0.0022
Choose :  i,  Posbility: 0.9777
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i
---------------------------
Next Token :  ==, Posbility: 0.9585
Next Token : !=, Posbility: 0.0143
Next Token : ., Posbility: 0.0089
Next Token :  in, Posbility: 0.0080
Next Token : ==, Posbility: 0.0056
Choose :  ==,  Posbility: 0.9585
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i ==
---------------------------
Next Token :  ', Posbility: 0.7516
Next Token :  ", Posbility: 0.0901
Next Token :  "\, Posbility: 0.0425
Next Token :  "', Posbility: 0.0296
Next Token :  '(, Posbility: 0.0249
Choose :  ',  Posbility: 0.7516
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '
---------------------------
Next Token : \, Posbility: 0.2955
Next Token : ,', Posbility: 0.2253
Next Token : .', Posbility: 0.2085
Next Token : ), Posbility: 0.0452
Next Token : !, Posbility: 0.0395
Choose : \,  Posbility: 0.2955
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\
---------------------------
Next Token : n, Posbility: 0.7722
Next Token : '', Posbility: 0.1279
Next Token : t, Posbility: 0.0874
Next Token : r, Posbility: 0.0085
Next Token : u, Posbility: 0.0013
Choose : n,  Posbility: 0.7722
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n
---------------------------
Next Token : ':, Posbility: 0.9152
Next Token : ', Posbility: 0.0843
Next Token : \, Posbility: 0.0002
Next Token : '., Posbility: 0.0001
Next Token : ';, Posbility: 0.0000
Choose : ':,  Posbility: 0.9152
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
---------------------------
Next Token : 
, Posbility: 0.9956
Next Token :  , Posbility: 0.0011
Next Token :  #, Posbility: 0.0011
Next Token :   , Posbility: 0.0004
Next Token :     , Posbility: 0.0004
Choose : 
,  Posbility: 0.9956
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':

---------------------------
Next Token :             , Posbility: 0.9978
Next Token :                 , Posbility: 0.0011
Next Token :              , Posbility: 0.0004
Next Token :            , Posbility: 0.0003
Next Token :         , Posbility: 0.0001
Choose :             ,  Posbility: 0.9978
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            
---------------------------
Next Token : qu, Posbility: 0.9692
Next Token : pass, Posbility: 0.0103
Next Token : if, Posbility: 0.0082
Next Token : continue, Posbility: 0.0030
Next Token : break, Posbility: 0.0018
Choose : qu,  Posbility: 0.9692
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            qu
---------------------------
Next Token : otation, Posbility: 0.9998
Next Token : ot, Posbility: 0.0001
Next Token : otion, Posbility: 0.0000
Next Token : oting, Posbility: 0.0000
Next Token : itation, Posbility: 0.0000
Choose : otation,  Posbility: 0.9998
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation
---------------------------
Next Token : _, Posbility: 0.9999
Next Token :  =, Posbility: 0.0001
Next Token : ., Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Choose : _,  Posbility: 0.9999
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_
---------------------------
Next Token : marks, Posbility: 0.9997
Next Token : mark, Posbility: 0.0002
Next Token :  marks, Posbility: 0.0000
Next Token : flags, Posbility: 0.0000
Next Token : marked, Posbility: 0.0000
Choose : marks,  Posbility: 0.9997
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks
---------------------------
Next Token : ., Posbility: 0.9989
Next Token :  =, Posbility: 0.0005
Next Token : [, Posbility: 0.0004
Next Token :  +=, Posbility: 0.0001
Next Token : ., Posbility: 0.0000
Choose : .,  Posbility: 0.9989
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.
---------------------------
Next Token : append, Posbility: 0.9991
Next Token : clear, Posbility: 0.0003
Next Token : ext, Posbility: 0.0002
Next Token : insert, Posbility: 0.0002
Next Token : pop, Posbility: 0.0001
Choose : append,  Posbility: 0.9991
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append
---------------------------
Next Token : (', Posbility: 0.9597
Next Token : (, Posbility: 0.0206
Next Token : (", Posbility: 0.0194
Next Token :  (', Posbility: 0.0002
Next Token : (), Posbility: 0.0000
Choose : (',  Posbility: 0.9597
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('
---------------------------
Next Token : \, Posbility: 0.9339
Next Token :  ', Posbility: 0.0348
Next Token : \\, Posbility: 0.0126
Next Token :  \, Posbility: 0.0020
Next Token : ", Posbility: 0.0018
Choose : \,  Posbility: 0.9339
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\
---------------------------
Next Token : n, Posbility: 0.9985
Next Token : t, Posbility: 0.0007
Next Token : r, Posbility: 0.0005
Next Token : u, Posbility: 0.0001
Next Token : '', Posbility: 0.0001
Choose : n,  Posbility: 0.9985
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n
---------------------------
Next Token : '), Posbility: 0.9984
Next Token : ', Posbility: 0.0006
Next Token : \, Posbility: 0.0005
Next Token :  ', Posbility: 0.0002
Next Token : ');, Posbility: 0.0000
Choose : '),  Posbility: 0.9984
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
---------------------------
Next Token : 
, Posbility: 0.9744
Next Token : 

, Posbility: 0.0175
Next Token :  , Posbility: 0.0022
Next Token :     , Posbility: 0.0017
Next Token :   , Posbility: 0.0007
Choose : 
,  Posbility: 0.9744
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')

---------------------------
Next Token :         , Posbility: 0.7026
Next Token :     , Posbility: 0.2758
Next Token :             , Posbility: 0.0184
Next Token : 
, Posbility: 0.0014
Next Token : #, Posbility: 0.0003
Choose :         ,  Posbility: 0.7026
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        
---------------------------
Next Token : el, Posbility: 0.6386
Next Token : else, Posbility: 0.3436
Next Token : 
, Posbility: 0.0101
Next Token : #, Posbility: 0.0029
Next Token : if, Posbility: 0.0020
Choose : el,  Posbility: 0.6386
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        el
---------------------------
Next Token : if, Posbility: 1.0000
Next Token :  if, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : ast, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Choose : if,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif
---------------------------
Next Token :  i, Posbility: 0.9899
Next Token :  ord, Posbility: 0.0042
Next Token :  len, Posbility: 0.0016
Next Token :  ', Posbility: 0.0009
Next Token :  (, Posbility: 0.0006
Choose :  i,  Posbility: 0.9899
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i
---------------------------
Next Token :  ==, Posbility: 0.9832
Next Token : ., Posbility: 0.0052
Next Token : !=, Posbility: 0.0040
Next Token : ==, Posbility: 0.0034
Next Token :  in, Posbility: 0.0023
Choose :  ==,  Posbility: 0.9832
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i ==
---------------------------
Next Token :  ', Posbility: 0.9503
Next Token :  ", Posbility: 0.0182
Next Token :  "\, Posbility: 0.0060
Next Token :  "', Posbility: 0.0049
Next Token :  '(, Posbility: 0.0034
Choose :  ',  Posbility: 0.9503
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '
---------------------------
Next Token : \, Posbility: 0.5984
Next Token : ,', Posbility: 0.1384
Next Token : .', Posbility: 0.0694
Next Token :  ', Posbility: 0.0515
Next Token : ", Posbility: 0.0137
Choose : \,  Posbility: 0.5984
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\
---------------------------
Next Token : t, Posbility: 0.6563
Next Token : r, Posbility: 0.3185
Next Token : '', Posbility: 0.0115
Next Token : b, Posbility: 0.0047
Next Token : n, Posbility: 0.0019
Choose : t,  Posbility: 0.6563
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t
---------------------------
Next Token : ':, Posbility: 0.9957
Next Token : ', Posbility: 0.0041
Next Token : \, Posbility: 0.0002
Next Token : ';, Posbility: 0.0000
Next Token :  ', Posbility: 0.0000
Choose : ':,  Posbility: 0.9957
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
---------------------------
Next Token : 
, Posbility: 0.9979
Next Token :  , Posbility: 0.0008
Next Token :  #, Posbility: 0.0004
Next Token :     , Posbility: 0.0003
Next Token :   , Posbility: 0.0002
Choose : 
,  Posbility: 0.9979
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':

---------------------------
Next Token :             , Posbility: 0.9986
Next Token :                 , Posbility: 0.0006
Next Token :              , Posbility: 0.0004
Next Token :            , Posbility: 0.0001
Next Token :         , Posbility: 0.0000
Choose :             ,  Posbility: 0.9986
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            
---------------------------
Next Token : qu, Posbility: 0.9969
Next Token : if, Posbility: 0.0011
Next Token : pass, Posbility: 0.0009
Next Token : continue, Posbility: 0.0002
Next Token : #, Posbility: 0.0002
Choose : qu,  Posbility: 0.9969
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            qu
---------------------------
Next Token : otation, Posbility: 0.9999
Next Token : ot, Posbility: 0.0000
Next Token : otion, Posbility: 0.0000
Next Token : itation, Posbility: 0.0000
Next Token : oting, Posbility: 0.0000
Choose : otation,  Posbility: 0.9999
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation
---------------------------
Next Token : _, Posbility: 1.0000
Next Token :  =, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Choose : _,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_
---------------------------
Next Token : marks, Posbility: 1.0000
Next Token : mark, Posbility: 0.0000
Next Token :  marks, Posbility: 0.0000
Next Token : flags, Posbility: 0.0000
Next Token : arks, Posbility: 0.0000
Choose : marks,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks
---------------------------
Next Token : ., Posbility: 0.9999
Next Token : [, Posbility: 0.0001
Next Token :  =, Posbility: 0.0000
Next Token :  +=, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Choose : .,  Posbility: 0.9999
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.
---------------------------
Next Token : append, Posbility: 0.9999
Next Token : ext, Posbility: 0.0001
Next Token : insert, Posbility: 0.0000
Next Token : clear, Posbility: 0.0000
Next Token : app, Posbility: 0.0000
Choose : append,  Posbility: 0.9999
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append
---------------------------
Next Token : (', Posbility: 0.9935
Next Token : (", Posbility: 0.0033
Next Token : (, Posbility: 0.0031
Next Token :  (', Posbility: 0.0001
Next Token : ((, Posbility: 0.0000
Choose : (',  Posbility: 0.9935
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('
---------------------------
Next Token : \, Posbility: 0.8910
Next Token :  ', Posbility: 0.0939
Next Token :     , Posbility: 0.0061
Next Token : \\, Posbility: 0.0025
Next Token :   , Posbility: 0.0018
Choose : \,  Posbility: 0.8910
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\
---------------------------
Next Token : t, Posbility: 0.9999
Next Token : n, Posbility: 0.0001
Next Token : tab, Posbility: 0.0000
Next Token : r, Posbility: 0.0000
Next Token : '', Posbility: 0.0000
Choose : t,  Posbility: 0.9999
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t
---------------------------
Next Token : '), Posbility: 0.9989
Next Token : ', Posbility: 0.0006
Next Token : \, Posbility: 0.0002
Next Token :  ', Posbility: 0.0001
Next Token : ');, Posbility: 0.0001
Choose : '),  Posbility: 0.9989
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
---------------------------
Next Token : 
, Posbility: 0.9663
Next Token : 

, Posbility: 0.0253
Next Token :     , Posbility: 0.0021
Next Token :  , Posbility: 0.0018
Next Token :         , Posbility: 0.0010
Choose : 
,  Posbility: 0.9663
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')

---------------------------
Next Token :         , Posbility: 0.7107
Next Token :     , Posbility: 0.2797
Next Token :             , Posbility: 0.0055
Next Token : 
, Posbility: 0.0017
Next Token : '', Posbility: 0.0005
Choose :         ,  Posbility: 0.7107
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        
---------------------------
Next Token : el, Posbility: 0.4987
Next Token : else, Posbility: 0.4846
Next Token : 
, Posbility: 0.0102
Next Token : #, Posbility: 0.0026
Next Token : if, Posbility: 0.0012
Choose : el,  Posbility: 0.4987
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        el
---------------------------
Next Token : if, Posbility: 1.0000
Next Token :  if, Posbility: 0.0000
Next Token : :, Posbility: 0.0000
Next Token : ift, Posbility: 0.0000
Next Token : ast, Posbility: 0.0000
Choose : if,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif
---------------------------
Next Token :  i, Posbility: 0.9805
Next Token :  ord, Posbility: 0.0108
Next Token :  len, Posbility: 0.0025
Next Token :  not, Posbility: 0.0018
Next Token :  ', Posbility: 0.0012
Choose :  i,  Posbility: 0.9805
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i
---------------------------
Next Token :  ==, Posbility: 0.9653
Next Token : !=, Posbility: 0.0125
Next Token : ., Posbility: 0.0098
Next Token : ==, Posbility: 0.0043
Next Token :  in, Posbility: 0.0041
Choose :  ==,  Posbility: 0.9653
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i ==
---------------------------
Next Token :  ', Posbility: 0.9018
Next Token :  ", Posbility: 0.0252
Next Token :  "', Posbility: 0.0205
Next Token :  "\, Posbility: 0.0080
Next Token :  i, Posbility: 0.0079
Choose :  ',  Posbility: 0.9018
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == '
---------------------------
Next Token : ,', Posbility: 0.3904
Next Token : \, Posbility: 0.2110
Next Token :  ', Posbility: 0.1137
Next Token : .', Posbility: 0.0725
Next Token : -, Posbility: 0.0313
Choose : ,',  Posbility: 0.3904
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ','
---------------------------
Next Token : :, Posbility: 0.9232
Next Token :  or, Posbility: 0.0691
Next Token :  and, Posbility: 0.0046
Next Token :  :, Posbility: 0.0022
Next Token : ., Posbility: 0.0002
Choose : :,  Posbility: 0.9232
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
---------------------------
Next Token : 
, Posbility: 0.9973
Next Token :  , Posbility: 0.0010
Next Token :  #, Posbility: 0.0006
Next Token :   , Posbility: 0.0002
Next Token :     , Posbility: 0.0002
Choose : 
,  Posbility: 0.9973
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':

---------------------------
Next Token :             , Posbility: 0.9986
Next Token :                 , Posbility: 0.0006
Next Token :              , Posbility: 0.0004
Next Token :            , Posbility: 0.0003
Next Token :           , Posbility: 0.0000
Choose :             ,  Posbility: 0.9986
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            
---------------------------
Next Token : qu, Posbility: 0.9900
Next Token : pass, Posbility: 0.0033
Next Token : if, Posbility: 0.0019
Next Token : continue, Posbility: 0.0015
Next Token : break, Posbility: 0.0005
Choose : qu,  Posbility: 0.9900
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            qu
---------------------------
Next Token : otation, Posbility: 0.9999
Next Token : ot, Posbility: 0.0000
Next Token : otion, Posbility: 0.0000
Next Token : oting, Posbility: 0.0000
Next Token : itation, Posbility: 0.0000
Choose : otation,  Posbility: 0.9999
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation
---------------------------
Next Token : _, Posbility: 0.9999
Next Token :  =, Posbility: 0.0001
Next Token : ., Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Choose : _,  Posbility: 0.9999
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_
---------------------------
Next Token : marks, Posbility: 0.9999
Next Token : mark, Posbility: 0.0001
Next Token :  marks, Posbility: 0.0000
Next Token : flags, Posbility: 0.0000
Next Token : marked, Posbility: 0.0000
Choose : marks,  Posbility: 0.9999
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks
---------------------------
Next Token : ., Posbility: 0.9996
Next Token :  =, Posbility: 0.0002
Next Token : [, Posbility: 0.0001
Next Token :  +=, Posbility: 0.0001
Next Token : ., Posbility: 0.0000
Choose : .,  Posbility: 0.9996
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.
---------------------------
Next Token : append, Posbility: 0.9995
Next Token : ext, Posbility: 0.0003
Next Token : clear, Posbility: 0.0001
Next Token : insert, Posbility: 0.0000
Next Token : pop, Posbility: 0.0000
Choose : append,  Posbility: 0.9995
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append
---------------------------
Next Token : (, Posbility: 0.9382
Next Token : (', Posbility: 0.0613
Next Token : (", Posbility: 0.0004
Next Token : ([, Posbility: 0.0000
Next Token : ',', Posbility: 0.0000
Choose : (,  Posbility: 0.9382
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(
---------------------------
Next Token : ',, Posbility: 0.9252
Next Token : ',', Posbility: 0.0485
Next Token : ",", Posbility: 0.0135
Next Token : i, Posbility: 0.0079
Next Token : ':, Posbility: 0.0010
Choose : ',,  Posbility: 0.9252
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',
---------------------------
Next Token : '), Posbility: 0.9792
Next Token :  ', Posbility: 0.0201
Next Token : ');, Posbility: 0.0003
Next Token : \, Posbility: 0.0002
Next Token :  \, Posbility: 0.0000
Choose : '),  Posbility: 0.9792
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
---------------------------
Next Token : 
, Posbility: 0.9924
Next Token : 

, Posbility: 0.0026
Next Token :  , Posbility: 0.0018
Next Token :     , Posbility: 0.0011
Next Token :   , Posbility: 0.0004
Choose : 
,  Posbility: 0.9924
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')

---------------------------
Next Token :         , Posbility: 0.9438
Next Token :     , Posbility: 0.0535
Next Token :             , Posbility: 0.0021
Next Token : 
, Posbility: 0.0002
Next Token : #, Posbility: 0.0001
Choose :         ,  Posbility: 0.9438
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        
---------------------------
Next Token : el, Posbility: 0.9388
Next Token : else, Posbility: 0.0581
Next Token : 
, Posbility: 0.0016
Next Token : #, Posbility: 0.0006
Next Token : if, Posbility: 0.0004
Choose : el,  Posbility: 0.9388
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        el
---------------------------
Next Token : if, Posbility: 1.0000
Next Token :  if, Posbility: 0.0000
Next Token : id, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Next Token : If, Posbility: 0.0000
Choose : if,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif
---------------------------
Next Token :  i, Posbility: 0.9968
Next Token :  ord, Posbility: 0.0012
Next Token :  ', Posbility: 0.0004
Next Token :   , Posbility: 0.0003
Next Token :  len, Posbility: 0.0002
Choose :  i,  Posbility: 0.9968
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i
---------------------------
Next Token :  ==, Posbility: 0.9939
Next Token : ==, Posbility: 0.0025
Next Token :  in, Posbility: 0.0011
Next Token : ., Posbility: 0.0010
Next Token : !=, Posbility: 0.0006
Choose :  ==,  Posbility: 0.9939
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i ==
---------------------------
Next Token :  ', Posbility: 0.9841
Next Token :  '/, Posbility: 0.0046
Next Token :  '[, Posbility: 0.0025
Next Token :  "', Posbility: 0.0021
Next Token :  '(, Posbility: 0.0018
Choose :  ',  Posbility: 0.9841
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '
---------------------------
Next Token : .', Posbility: 0.6024
Next Token : ;, Posbility: 0.1386
Next Token : ), Posbility: 0.0522
Next Token : !, Posbility: 0.0326
Next Token :  ', Posbility: 0.0271
Choose : .',  Posbility: 0.6024
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.'
---------------------------
Next Token : :, Posbility: 0.9765
Next Token :  or, Posbility: 0.0226
Next Token :  and, Posbility: 0.0004
Next Token :  :, Posbility: 0.0003
Next Token : :', Posbility: 0.0001
Choose : :,  Posbility: 0.9765
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
---------------------------
Next Token : 
, Posbility: 0.9986
Next Token :  , Posbility: 0.0007
Next Token :     , Posbility: 0.0002
Next Token :  #, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Choose : 
,  Posbility: 0.9986
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':

---------------------------
Next Token :             , Posbility: 0.9995
Next Token :                 , Posbility: 0.0002
Next Token :            , Posbility: 0.0002
Next Token :              , Posbility: 0.0001
Next Token :         , Posbility: 0.0000
Choose :             ,  Posbility: 0.9995
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            
---------------------------
Next Token : qu, Posbility: 0.9986
Next Token : if, Posbility: 0.0007
Next Token : pass, Posbility: 0.0002
Next Token : #, Posbility: 0.0001
Next Token : return, Posbility: 0.0000
Choose : qu,  Posbility: 0.9986
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            qu
---------------------------
Next Token : otation, Posbility: 1.0000
Next Token : ot, Posbility: 0.0000
Next Token : otion, Posbility: 0.0000
Next Token : itation, Posbility: 0.0000
Next Token : oting, Posbility: 0.0000
Choose : otation,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation
---------------------------
Next Token : _, Posbility: 1.0000
Next Token :  =, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Choose : _,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_
---------------------------
Next Token : marks, Posbility: 1.0000
Next Token : mark, Posbility: 0.0000
Next Token :  marks, Posbility: 0.0000
Next Token : flags, Posbility: 0.0000
Next Token : arks, Posbility: 0.0000
Choose : marks,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks
---------------------------
Next Token : ., Posbility: 1.0000
Next Token : [, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  +=, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Choose : .,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.
---------------------------
Next Token : append, Posbility: 0.9999
Next Token : ext, Posbility: 0.0001
Next Token : app, Posbility: 0.0000
Next Token : insert, Posbility: 0.0000
Next Token : add, Posbility: 0.0000
Choose : append,  Posbility: 0.9999
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append
---------------------------
Next Token : (', Posbility: 0.8972
Next Token : (, Posbility: 0.0990
Next Token : (", Posbility: 0.0037
Next Token :  (', Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Choose : (',  Posbility: 0.8972
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('
---------------------------
Next Token : .', Posbility: 0.9971
Next Token : \, Posbility: 0.0009
Next Token : .., Posbility: 0.0004
Next Token : ."), Posbility: 0.0004
Next Token :  ', Posbility: 0.0003
Choose : .',  Posbility: 0.9971
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.'
---------------------------
Next Token : ), Posbility: 0.9999
Next Token : );, Posbility: 0.0001
Next Token :  ), Posbility: 0.0000
Next Token : )*, Posbility: 0.0000
Next Token : )+, Posbility: 0.0000
Choose : ),  Posbility: 0.9999
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
---------------------------
Next Token : 
, Posbility: 0.9920
Next Token : 

, Posbility: 0.0029
Next Token :  , Posbility: 0.0015
Next Token :     , Posbility: 0.0014
Next Token :         , Posbility: 0.0010
Choose : 
,  Posbility: 0.9920
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')

---------------------------
Next Token :         , Posbility: 0.9436
Next Token :     , Posbility: 0.0545
Next Token :             , Posbility: 0.0011
Next Token : 
, Posbility: 0.0003
Next Token : '', Posbility: 0.0001
Choose :         ,  Posbility: 0.9436
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        
---------------------------
Next Token : el, Posbility: 0.9466
Next Token : else, Posbility: 0.0513
Next Token : 
, Posbility: 0.0010
Next Token : #, Posbility: 0.0005
Next Token : if, Posbility: 0.0003
Choose : el,  Posbility: 0.9466
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        el
---------------------------
Next Token : if, Posbility: 1.0000
Next Token :  if, Posbility: 0.0000
Next Token : ific, Posbility: 0.0000
Next Token : ast, Posbility: 0.0000
Next Token : id, Posbility: 0.0000
Choose : if,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif
---------------------------
Next Token :  i, Posbility: 0.9982
Next Token :  ord, Posbility: 0.0007
Next Token :  ', Posbility: 0.0002
Next Token :   , Posbility: 0.0001
Next Token :  (, Posbility: 0.0001
Choose :  i,  Posbility: 0.9982
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i
---------------------------
Next Token :  ==, Posbility: 0.9967
Next Token : ==, Posbility: 0.0014
Next Token : ., Posbility: 0.0005
Next Token : !=, Posbility: 0.0005
Next Token :  in, Posbility: 0.0003
Choose :  ==,  Posbility: 0.9967
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i ==
---------------------------
Next Token :  ', Posbility: 0.8163
Next Token :  '/, Posbility: 0.1447
Next Token :  "', Posbility: 0.0093
Next Token :  '[, Posbility: 0.0060
Next Token :  '(, Posbility: 0.0048
Choose :  ',  Posbility: 0.8163
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '
---------------------------
Next Token : !, Posbility: 0.2197
Next Token : ;, Posbility: 0.1176
Next Token : ?', Posbility: 0.1160
Next Token : -, Posbility: 0.0952
Next Token : :, Posbility: 0.0629
Choose : !,  Posbility: 0.2197
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!
---------------------------
Next Token : ':, Posbility: 0.9998
Next Token : .', Posbility: 0.0000
Next Token : '', Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Next Token : \', Posbility: 0.0000
Choose : ':,  Posbility: 0.9998
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
---------------------------
Next Token : 
, Posbility: 0.9987
Next Token :  , Posbility: 0.0007
Next Token :     , Posbility: 0.0002
Next Token :  #, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Choose : 
,  Posbility: 0.9987
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':

---------------------------
Next Token :             , Posbility: 0.9993
Next Token :                 , Posbility: 0.0003
Next Token :            , Posbility: 0.0001
Next Token :              , Posbility: 0.0001
Next Token :         , Posbility: 0.0000
Choose :             ,  Posbility: 0.9993
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            
---------------------------
Next Token : qu, Posbility: 0.9987
Next Token : if, Posbility: 0.0006
Next Token : pass, Posbility: 0.0001
Next Token : #, Posbility: 0.0001
Next Token : i, Posbility: 0.0000
Choose : qu,  Posbility: 0.9987
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            qu
---------------------------
Next Token : otation, Posbility: 0.9999
Next Token : otion, Posbility: 0.0000
Next Token : ot, Posbility: 0.0000
Next Token : itation, Posbility: 0.0000
Next Token : oting, Posbility: 0.0000
Choose : otation,  Posbility: 0.9999
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation
---------------------------
Next Token : _, Posbility: 1.0000
Next Token :  =, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Choose : _,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_
---------------------------
Next Token : marks, Posbility: 1.0000
Next Token : mark, Posbility: 0.0000
Next Token :  marks, Posbility: 0.0000
Next Token : flags, Posbility: 0.0000
Next Token : marked, Posbility: 0.0000
Choose : marks,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks
---------------------------
Next Token : ., Posbility: 0.9999
Next Token : [, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  +=, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Choose : .,  Posbility: 0.9999
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.
---------------------------
Next Token : append, Posbility: 0.9999
Next Token : ext, Posbility: 0.0001
Next Token : insert, Posbility: 0.0000
Next Token : clear, Posbility: 0.0000
Next Token : app, Posbility: 0.0000
Choose : append,  Posbility: 0.9999
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append
---------------------------
Next Token : (', Posbility: 0.9797
Next Token : (, Posbility: 0.0173
Next Token : (", Posbility: 0.0029
Next Token :  (', Posbility: 0.0000
Next Token : ((, Posbility: 0.0000
Choose : (',  Posbility: 0.9797
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('
---------------------------
Next Token : !, Posbility: 0.8633
Next Token : !', Posbility: 0.1199
Next Token : !", Posbility: 0.0139
Next Token : !!, Posbility: 0.0006
Next Token : !), Posbility: 0.0004
Choose : !,  Posbility: 0.8633
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!
---------------------------
Next Token : '), Posbility: 0.9998
Next Token :  ', Posbility: 0.0001
Next Token : ');, Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : \', Posbility: 0.0000
Choose : '),  Posbility: 0.9998
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
---------------------------
Next Token : 
, Posbility: 0.9944
Next Token : 

, Posbility: 0.0020
Next Token :  , Posbility: 0.0011
Next Token :     , Posbility: 0.0009
Next Token :    , Posbility: 0.0003
Choose : 
,  Posbility: 0.9944
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')

---------------------------
Next Token :         , Posbility: 0.9488
Next Token :     , Posbility: 0.0487
Next Token :             , Posbility: 0.0019
Next Token : 
, Posbility: 0.0001
Next Token : '', Posbility: 0.0001
Choose :         ,  Posbility: 0.9488
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        
---------------------------
Next Token : el, Posbility: 0.9610
Next Token : else, Posbility: 0.0373
Next Token : 
, Posbility: 0.0008
Next Token : #, Posbility: 0.0004
Next Token : if, Posbility: 0.0002
Choose : el,  Posbility: 0.9610
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        el
---------------------------
Next Token : if, Posbility: 1.0000
Next Token :  if, Posbility: 0.0000
Next Token : id, Posbility: 0.0000
Next Token : ific, Posbility: 0.0000
Next Token : ig, Posbility: 0.0000
Choose : if,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif
---------------------------
Next Token :  i, Posbility: 0.9986
Next Token :  ord, Posbility: 0.0004
Next Token :  ', Posbility: 0.0003
Next Token :   , Posbility: 0.0001
Next Token :  len, Posbility: 0.0001
Choose :  i,  Posbility: 0.9986
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i
---------------------------
Next Token :  ==, Posbility: 0.9975
Next Token : ==, Posbility: 0.0012
Next Token : ., Posbility: 0.0004
Next Token : !=, Posbility: 0.0002
Next Token :  =, Posbility: 0.0002
Choose :  ==,  Posbility: 0.9975
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i ==
---------------------------
Next Token :  ', Posbility: 0.9629
Next Token :  "', Posbility: 0.0109
Next Token :  '/, Posbility: 0.0095
Next Token :  '(, Posbility: 0.0072
Next Token :  '[, Posbility: 0.0027
Choose :  ',  Posbility: 0.9629
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '
---------------------------
Next Token : ?', Posbility: 0.8287
Next Token : ?, Posbility: 0.0441
Next Token : ;, Posbility: 0.0218
Next Token : #, Posbility: 0.0188
Next Token : ", Posbility: 0.0086
Choose : ?',  Posbility: 0.8287
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?'
---------------------------
Next Token : :, Posbility: 0.9972
Next Token :  or, Posbility: 0.0019
Next Token :  :, Posbility: 0.0004
Next Token :  and, Posbility: 0.0003
Next Token : :#, Posbility: 0.0001
Choose : :,  Posbility: 0.9972
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
---------------------------
Next Token : 
, Posbility: 0.9993
Next Token :  , Posbility: 0.0004
Next Token :     , Posbility: 0.0001
Next Token :  #, Posbility: 0.0001
Next Token :   , Posbility: 0.0000
Choose : 
,  Posbility: 0.9993
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':

---------------------------
Next Token :             , Posbility: 0.9995
Next Token :                 , Posbility: 0.0002
Next Token :              , Posbility: 0.0001
Next Token :            , Posbility: 0.0001
Next Token :         , Posbility: 0.0000
Choose :             ,  Posbility: 0.9995
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            
---------------------------
Next Token : qu, Posbility: 0.9993
Next Token : if, Posbility: 0.0003
Next Token : pass, Posbility: 0.0001
Next Token : #, Posbility: 0.0000
Next Token : q, Posbility: 0.0000
Choose : qu,  Posbility: 0.9993
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            qu
---------------------------
Next Token : otation, Posbility: 1.0000
Next Token : ot, Posbility: 0.0000
Next Token : otion, Posbility: 0.0000
Next Token : itation, Posbility: 0.0000
Next Token : oting, Posbility: 0.0000
Choose : otation,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation
---------------------------
Next Token : _, Posbility: 1.0000
Next Token :  =, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Choose : _,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_
---------------------------
Next Token : marks, Posbility: 1.0000
Next Token : mark, Posbility: 0.0000
Next Token :  marks, Posbility: 0.0000
Next Token : flags, Posbility: 0.0000
Next Token : checks, Posbility: 0.0000
Choose : marks,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks
---------------------------
Next Token : ., Posbility: 1.0000
Next Token :  =, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token :  +=, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Choose : .,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.
---------------------------
Next Token : append, Posbility: 0.9999
Next Token : ext, Posbility: 0.0000
Next Token : insert, Posbility: 0.0000
Next Token : clear, Posbility: 0.0000
Next Token : app, Posbility: 0.0000
Choose : append,  Posbility: 0.9999
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append
---------------------------
Next Token : (', Posbility: 0.9978
Next Token : (, Posbility: 0.0014
Next Token : (", Posbility: 0.0008
Next Token :  (', Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Choose : (',  Posbility: 0.9978
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('
---------------------------
Next Token : ?', Posbility: 0.9003
Next Token : ?, Posbility: 0.0987
Next Token : ??, Posbility: 0.0004
Next Token : ?", Posbility: 0.0003
Next Token : !, Posbility: 0.0001
Choose : ?',  Posbility: 0.9003
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?'
---------------------------
Next Token : ), Posbility: 0.9999
Next Token : );, Posbility: 0.0000
Next Token :  ), Posbility: 0.0000
Next Token : )', Posbility: 0.0000
Next Token : )+, Posbility: 0.0000
Choose : ),  Posbility: 0.9999
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
---------------------------
Next Token : 
, Posbility: 0.9898
Next Token : 

, Posbility: 0.0059
Next Token :  , Posbility: 0.0011
Next Token :     , Posbility: 0.0010
Next Token :         , Posbility: 0.0007
Choose : 
,  Posbility: 0.9898
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')

---------------------------
Next Token :         , Posbility: 0.9173
Next Token :     , Posbility: 0.0807
Next Token :             , Posbility: 0.0011
Next Token : 
, Posbility: 0.0002
Next Token : '', Posbility: 0.0001
Choose :         ,  Posbility: 0.9173
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        
---------------------------
Next Token : el, Posbility: 0.9428
Next Token : else, Posbility: 0.0540
Next Token : 
, Posbility: 0.0017
Next Token : #, Posbility: 0.0005
Next Token : if, Posbility: 0.0004
Choose : el,  Posbility: 0.9428
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        el
---------------------------
Next Token : if, Posbility: 1.0000
Next Token :  if, Posbility: 0.0000
Next Token : ig, Posbility: 0.0000
Next Token : ific, Posbility: 0.0000
Next Token : id, Posbility: 0.0000
Choose : if,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif
---------------------------
Next Token :  i, Posbility: 0.9977
Next Token :  ord, Posbility: 0.0007
Next Token :  ', Posbility: 0.0003
Next Token :  len, Posbility: 0.0003
Next Token :  (, Posbility: 0.0002
Choose :  i,  Posbility: 0.9977
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i
---------------------------
Next Token :  ==, Posbility: 0.9953
Next Token : ==, Posbility: 0.0014
Next Token : !=, Posbility: 0.0009
Next Token : ., Posbility: 0.0007
Next Token :  in, Posbility: 0.0007
Choose :  ==,  Posbility: 0.9953
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i ==
---------------------------
Next Token :  ', Posbility: 0.9374
Next Token :  '/, Posbility: 0.0408
Next Token :  '[, Posbility: 0.0064
Next Token :  "', Posbility: 0.0054
Next Token :  '(, Posbility: 0.0030
Choose :  ',  Posbility: 0.9374
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == '
---------------------------
Next Token : :, Posbility: 0.2460
Next Token : ;, Posbility: 0.1548
Next Token : ?', Posbility: 0.0912
Next Token : -, Posbility: 0.0606
Next Token : -', Posbility: 0.0467
Choose : :,  Posbility: 0.2460
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':
---------------------------
Next Token : ':, Posbility: 0.9997
Next Token :  ', Posbility: 0.0001
Next Token : '', Posbility: 0.0000
Next Token : ',, Posbility: 0.0000
Next Token : '), Posbility: 0.0000
Choose : ':,  Posbility: 0.9997
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
---------------------------
Next Token : 
, Posbility: 0.9985
Next Token :  , Posbility: 0.0006
Next Token :  #, Posbility: 0.0003
Next Token :     , Posbility: 0.0002
Next Token :   , Posbility: 0.0001
Choose : 
,  Posbility: 0.9985
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':

---------------------------
Next Token :             , Posbility: 0.9994
Next Token :                 , Posbility: 0.0002
Next Token :            , Posbility: 0.0001
Next Token :              , Posbility: 0.0001
Next Token :         , Posbility: 0.0000
Choose :             ,  Posbility: 0.9994
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            
---------------------------
Next Token : qu, Posbility: 0.9971
Next Token : if, Posbility: 0.0014
Next Token : pass, Posbility: 0.0003
Next Token : #, Posbility: 0.0001
Next Token : continue, Posbility: 0.0001
Choose : qu,  Posbility: 0.9971
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            qu
---------------------------
Next Token : otation, Posbility: 1.0000
Next Token : ot, Posbility: 0.0000
Next Token : otion, Posbility: 0.0000
Next Token : oting, Posbility: 0.0000
Next Token : itation, Posbility: 0.0000
Choose : otation,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation
---------------------------
Next Token : _, Posbility: 1.0000
Next Token :  =, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Choose : _,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_
---------------------------
Next Token : marks, Posbility: 1.0000
Next Token : mark, Posbility: 0.0000
Next Token :  marks, Posbility: 0.0000
Next Token : flags, Posbility: 0.0000
Next Token : makes, Posbility: 0.0000
Choose : marks,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks
---------------------------
Next Token : ., Posbility: 0.9999
Next Token : [, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  +=, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Choose : .,  Posbility: 0.9999
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.
---------------------------
Next Token : append, Posbility: 0.9999
Next Token : ext, Posbility: 0.0000
Next Token : insert, Posbility: 0.0000
Next Token : clear, Posbility: 0.0000
Next Token : app, Posbility: 0.0000
Choose : append,  Posbility: 0.9999
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append
---------------------------
Next Token : (, Posbility: 0.9565
Next Token : (', Posbility: 0.0434
Next Token : (", Posbility: 0.0001
Next Token : ((, Posbility: 0.0000
Next Token : ':, Posbility: 0.0000
Choose : (,  Posbility: 0.9565
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(
---------------------------
Next Token : ':, Posbility: 0.9984
Next Token : ":", Posbility: 0.0010
Next Token : ":, Posbility: 0.0005
Next Token : ',, Posbility: 0.0000
Next Token : '', Posbility: 0.0000
Choose : ':,  Posbility: 0.9984
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':
---------------------------
Next Token : '), Posbility: 0.9996
Next Token :  ', Posbility: 0.0003
Next Token : ', Posbility: 0.0000
Next Token : ');, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Choose : '),  Posbility: 0.9996
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
---------------------------
Next Token : 
, Posbility: 0.9963
Next Token : 

, Posbility: 0.0014
Next Token :  , Posbility: 0.0008
Next Token :     , Posbility: 0.0004
Next Token :         , Posbility: 0.0002
Choose : 
,  Posbility: 0.9963
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')

---------------------------
Next Token :         , Posbility: 0.9692
Next Token :     , Posbility: 0.0289
Next Token :             , Posbility: 0.0015
Next Token : 
, Posbility: 0.0001
Next Token : #, Posbility: 0.0000
Choose :         ,  Posbility: 0.9692
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        
---------------------------
Next Token : el, Posbility: 0.9815
Next Token : else, Posbility: 0.0169
Next Token : 
, Posbility: 0.0007
Next Token : #, Posbility: 0.0004
Next Token : if, Posbility: 0.0002
Choose : el,  Posbility: 0.9815
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        el
---------------------------
Next Token : if, Posbility: 1.0000
Next Token :  if, Posbility: 0.0000
Next Token : ific, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : id, Posbility: 0.0000
Choose : if,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif
---------------------------
Next Token :  i, Posbility: 0.9987
Next Token :  ord, Posbility: 0.0003
Next Token :  len, Posbility: 0.0002
Next Token :  ', Posbility: 0.0002
Next Token :   , Posbility: 0.0001
Choose :  i,  Posbility: 0.9987
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i
---------------------------
Next Token :  ==, Posbility: 0.9979
Next Token : ==, Posbility: 0.0006
Next Token : !=, Posbility: 0.0005
Next Token : ., Posbility: 0.0004
Next Token :  in, Posbility: 0.0003
Choose :  ==,  Posbility: 0.9979
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i ==
---------------------------
Next Token :  ', Posbility: 0.9681
Next Token : ';, Posbility: 0.0142
Next Token :  '(, Posbility: 0.0051
Next Token :  "', Posbility: 0.0049
Next Token :  '/, Posbility: 0.0028
Choose :  ',  Posbility: 0.9681
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == '
---------------------------
Next Token : ;, Posbility: 0.8885
Next Token : -, Posbility: 0.0145
Next Token : @, Posbility: 0.0102
Next Token : -', Posbility: 0.0088
Next Token : ?', Posbility: 0.0077
Choose : ;,  Posbility: 0.8885
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';
---------------------------
Next Token : ':, Posbility: 0.9920
Next Token : ', Posbility: 0.0080
Next Token : ?', Posbility: 0.0000
Next Token : ',, Posbility: 0.0000
Next Token : '?, Posbility: 0.0000
Choose : ':,  Posbility: 0.9920
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
---------------------------
Next Token : 
, Posbility: 0.9992
Next Token :  , Posbility: 0.0004
Next Token :     , Posbility: 0.0001
Next Token :  #, Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Choose : 
,  Posbility: 0.9992
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':

---------------------------
Next Token :             , Posbility: 0.9998
Next Token :                 , Posbility: 0.0001
Next Token :              , Posbility: 0.0000
Next Token :            , Posbility: 0.0000
Next Token :         , Posbility: 0.0000
Choose :             ,  Posbility: 0.9998
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            
---------------------------
Next Token : qu, Posbility: 0.9996
Next Token : if, Posbility: 0.0001
Next Token : pass, Posbility: 0.0001
Next Token : continue, Posbility: 0.0000
Next Token : #, Posbility: 0.0000
Choose : qu,  Posbility: 0.9996
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            qu
---------------------------
Next Token : otation, Posbility: 1.0000
Next Token : ot, Posbility: 0.0000
Next Token : itation, Posbility: 0.0000
Next Token : otion, Posbility: 0.0000
Next Token : oting, Posbility: 0.0000
Choose : otation,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation
---------------------------
Next Token : _, Posbility: 1.0000
Next Token :  =, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Choose : _,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_
---------------------------
Next Token : marks, Posbility: 1.0000
Next Token : mark, Posbility: 0.0000
Next Token :  marks, Posbility: 0.0000
Next Token : flags, Posbility: 0.0000
Next Token : makes, Posbility: 0.0000
Choose : marks,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks
---------------------------
Next Token : ., Posbility: 1.0000
Next Token : [, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  +=, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Choose : .,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.
---------------------------
Next Token : append, Posbility: 1.0000
Next Token : ext, Posbility: 0.0000
Next Token : clear, Posbility: 0.0000
Next Token : insert, Posbility: 0.0000
Next Token : app, Posbility: 0.0000
Choose : append,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append
---------------------------
Next Token : (', Posbility: 0.9872
Next Token : (, Posbility: 0.0097
Next Token : (", Posbility: 0.0031
Next Token :  (', Posbility: 0.0000
Next Token : ;, Posbility: 0.0000
Choose : (',  Posbility: 0.9872
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append('
---------------------------
Next Token : ;, Posbility: 0.9940
Next Token : ;;, Posbility: 0.0030
Next Token : <, Posbility: 0.0005
Next Token :  ', Posbility: 0.0004
Next Token : ?', Posbility: 0.0003
Choose : ;,  Posbility: 0.9940
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';
---------------------------
Next Token : '), Posbility: 0.9999
Next Token : ');, Posbility: 0.0000
Next Token :  ', Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Choose : '),  Posbility: 0.9999
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
---------------------------
Next Token : 
, Posbility: 0.9919
Next Token : 

, Posbility: 0.0042
Next Token :     , Posbility: 0.0009
Next Token :  , Posbility: 0.0009
Next Token :         , Posbility: 0.0007
Choose : 
,  Posbility: 0.9919
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')

---------------------------
Next Token :         , Posbility: 0.9274
Next Token :     , Posbility: 0.0706
Next Token :             , Posbility: 0.0013
Next Token : 
, Posbility: 0.0002
Next Token : '', Posbility: 0.0001
Choose :         ,  Posbility: 0.9274
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        
---------------------------
Next Token : el, Posbility: 0.9581
Next Token : else, Posbility: 0.0393
Next Token : 
, Posbility: 0.0013
Next Token : #, Posbility: 0.0006
Next Token : if, Posbility: 0.0003
Choose : el,  Posbility: 0.9581
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        el
---------------------------
Next Token : if, Posbility: 1.0000
Next Token :  if, Posbility: 0.0000
Next Token : ig, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token : id, Posbility: 0.0000
Choose : if,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif
---------------------------
Next Token :  i, Posbility: 0.9965
Next Token :  ord, Posbility: 0.0016
Next Token :  len, Posbility: 0.0005
Next Token :  ', Posbility: 0.0003
Next Token :  (, Posbility: 0.0002
Choose :  i,  Posbility: 0.9965
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i
---------------------------
Next Token :  ==, Posbility: 0.9958
Next Token : ., Posbility: 0.0011
Next Token : !=, Posbility: 0.0009
Next Token : ==, Posbility: 0.0008
Next Token :  in, Posbility: 0.0006
Choose :  ==,  Posbility: 0.9958
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i ==
---------------------------
Next Token :  ', Posbility: 0.9272
Next Token :  "', Posbility: 0.0333
Next Token :  '(, Posbility: 0.0132
Next Token :  '/, Posbility: 0.0100
Next Token :  '[, Posbility: 0.0099
Choose :  ',  Posbility: 0.9272
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '
---------------------------
Next Token : <, Posbility: 0.1633
Next Token : ?', Posbility: 0.1342
Next Token : -, Posbility: 0.1331
Next Token : ;, Posbility: 0.0580
Next Token : ), Posbility: 0.0564
Choose : <,  Posbility: 0.1633
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<
---------------------------
Next Token : ':, Posbility: 0.9832
Next Token : ', Posbility: 0.0147
Next Token : br, Posbility: 0.0004
Next Token : =, Posbility: 0.0002
Next Token : n, Posbility: 0.0001
Choose : ':,  Posbility: 0.9832
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
---------------------------
Next Token : 
, Posbility: 0.9990
Next Token :  , Posbility: 0.0003
Next Token :  #, Posbility: 0.0003
Next Token :   , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Choose : 
,  Posbility: 0.9990
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':

---------------------------
Next Token :             , Posbility: 0.9995
Next Token :                 , Posbility: 0.0002
Next Token :            , Posbility: 0.0001
Next Token :              , Posbility: 0.0001
Next Token :         , Posbility: 0.0000
Choose :             ,  Posbility: 0.9995
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            
---------------------------
Next Token : qu, Posbility: 0.9968
Next Token : if, Posbility: 0.0013
Next Token : pass, Posbility: 0.0005
Next Token : #, Posbility: 0.0001
Next Token : break, Posbility: 0.0001
Choose : qu,  Posbility: 0.9968
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            qu
---------------------------
Next Token : otation, Posbility: 0.9999
Next Token : ot, Posbility: 0.0000
Next Token : otion, Posbility: 0.0000
Next Token : oting, Posbility: 0.0000
Next Token : itation, Posbility: 0.0000
Choose : otation,  Posbility: 0.9999
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation
---------------------------
Next Token : _, Posbility: 1.0000
Next Token :  =, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Choose : _,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_
---------------------------
Next Token : marks, Posbility: 0.9999
Next Token : mark, Posbility: 0.0001
Next Token :  marks, Posbility: 0.0000
Next Token : flags, Posbility: 0.0000
Next Token : marked, Posbility: 0.0000
Choose : marks,  Posbility: 0.9999
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks
---------------------------
Next Token : ., Posbility: 0.9999
Next Token :  =, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token :  +=, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Choose : .,  Posbility: 0.9999
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.
---------------------------
Next Token : append, Posbility: 0.9999
Next Token : ext, Posbility: 0.0001
Next Token : insert, Posbility: 0.0001
Next Token : clear, Posbility: 0.0000
Next Token : app, Posbility: 0.0000
Choose : append,  Posbility: 0.9999
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append
---------------------------
Next Token : (', Posbility: 0.9955
Next Token : (, Posbility: 0.0025
Next Token : (", Posbility: 0.0019
Next Token :  (', Posbility: 0.0000
Next Token : ((, Posbility: 0.0000
Choose : (',  Posbility: 0.9955
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('
---------------------------
Next Token : <, Posbility: 0.9933
Next Token : &, Posbility: 0.0021
Next Token : <<, Posbility: 0.0017
Next Token : >, Posbility: 0.0006
Next Token : {, Posbility: 0.0005
Choose : <,  Posbility: 0.9933
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<
---------------------------
Next Token : '), Posbility: 0.9993
Next Token : ', Posbility: 0.0001
Next Token : =', Posbility: 0.0000
Next Token : .', Posbility: 0.0000
Next Token : br, Posbility: 0.0000
Choose : '),  Posbility: 0.9993
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
---------------------------
Next Token : 
, Posbility: 0.9986
Next Token :  , Posbility: 0.0005
Next Token : 

, Posbility: 0.0002
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Choose : 
,  Posbility: 0.9986
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')

---------------------------
Next Token :         , Posbility: 0.9962
Next Token :     , Posbility: 0.0026
Next Token :             , Posbility: 0.0010
Next Token : 	, Posbility: 0.0000
Next Token : #, Posbility: 0.0000
Choose :         ,  Posbility: 0.9962
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        
---------------------------
Next Token : el, Posbility: 0.9949
Next Token : else, Posbility: 0.0046
Next Token : 
, Posbility: 0.0002
Next Token : #, Posbility: 0.0001
Next Token : if, Posbility: 0.0001
Choose : el,  Posbility: 0.9949
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        el
---------------------------
Next Token : if, Posbility: 1.0000
Next Token : id, Posbility: 0.0000
Next Token :  if, Posbility: 0.0000
Next Token : ig, Posbility: 0.0000
Next Token : 
, Posbility: 0.0000
Choose : if,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif
---------------------------
Next Token :  i, Posbility: 0.9997
Next Token :   , Posbility: 0.0001
Next Token :  ', Posbility: 0.0000
Next Token :  quotation, Posbility: 0.0000
Next Token :  (, Posbility: 0.0000
Choose :  i,  Posbility: 0.9997
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i
---------------------------
Next Token :  ==, Posbility: 0.9991
Next Token : ==, Posbility: 0.0004
Next Token : ., Posbility: 0.0002
Next Token :   , Posbility: 0.0001
Next Token :  >=, Posbility: 0.0001
Choose :  ==,  Posbility: 0.9991
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i ==
---------------------------
Next Token :  ', Posbility: 0.9959
Next Token : '>, Posbility: 0.0018
Next Token :  '[, Posbility: 0.0011
Next Token :  ", Posbility: 0.0003
Next Token :  '(, Posbility: 0.0002
Choose :  ',  Posbility: 0.9959
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '
---------------------------
Next Token : >, Posbility: 0.7635
Next Token : =, Posbility: 0.1587
Next Token : =', Posbility: 0.0380
Next Token : &, Posbility: 0.0113
Next Token : <, Posbility: 0.0054
Choose : >,  Posbility: 0.7635
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>
---------------------------
Next Token : ':, Posbility: 0.9960
Next Token : ', Posbility: 0.0040
Next Token : ';, Posbility: 0.0000
Next Token : '], Posbility: 0.0000
Next Token : .', Posbility: 0.0000
Choose : ':,  Posbility: 0.9960
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
---------------------------
Next Token : 
, Posbility: 0.9996
Next Token :  , Posbility: 0.0003
Next Token :     , Posbility: 0.0001
Next Token :    , Posbility: 0.0000
Next Token :  #, Posbility: 0.0000
Choose : 
,  Posbility: 0.9996
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':

---------------------------
Next Token :             , Posbility: 0.9998
Next Token :                 , Posbility: 0.0001
Next Token :              , Posbility: 0.0000
Next Token :            , Posbility: 0.0000
Next Token :         , Posbility: 0.0000
Choose :             ,  Posbility: 0.9998
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            
---------------------------
Next Token : qu, Posbility: 0.9999
Next Token : if, Posbility: 0.0000
Next Token : pass, Posbility: 0.0000
Next Token : return, Posbility: 0.0000
Next Token : #, Posbility: 0.0000
Choose : qu,  Posbility: 0.9999
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            qu
---------------------------
Next Token : otation, Posbility: 1.0000
Next Token : itation, Posbility: 0.0000
Next Token :  quotation, Posbility: 0.0000
Next Token : otion, Posbility: 0.0000
Next Token : ot, Posbility: 0.0000
Choose : otation,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation
---------------------------
Next Token : _, Posbility: 1.0000
Next Token :  =, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Choose : _,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_
---------------------------
Next Token : marks, Posbility: 1.0000
Next Token :  marks, Posbility: 0.0000
Next Token : mark, Posbility: 0.0000
Next Token : flags, Posbility: 0.0000
Next Token : arks, Posbility: 0.0000
Choose : marks,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks
---------------------------
Next Token : ., Posbility: 1.0000
Next Token : [, Posbility: 0.0000
Next Token :  =, Posbility: 0.0000
Next Token :  +=, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Choose : .,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.
---------------------------
Next Token : append, Posbility: 1.0000
Next Token : app, Posbility: 0.0000
Next Token : insert, Posbility: 0.0000
Next Token : ext, Posbility: 0.0000
Next Token : add, Posbility: 0.0000
Choose : append,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append
---------------------------
Next Token : (', Posbility: 0.9841
Next Token : (, Posbility: 0.0159
Next Token : (", Posbility: 0.0000
Next Token :  (', Posbility: 0.0000
Next Token : >, Posbility: 0.0000
Choose : (',  Posbility: 0.9841
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('
---------------------------
Next Token : >, Posbility: 0.9992
Next Token : <, Posbility: 0.0002
Next Token : =, Posbility: 0.0001
Next Token : >), Posbility: 0.0001
Next Token : >>, Posbility: 0.0000
Choose : >,  Posbility: 0.9992
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>
---------------------------
Next Token : '), Posbility: 1.0000
Next Token : ', Posbility: 0.0000
Next Token :  ', Posbility: 0.0000
Next Token : \, Posbility: 0.0000
Next Token : ');, Posbility: 0.0000
Choose : '),  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
---------------------------
Next Token : 
, Posbility: 0.9942
Next Token : 

, Posbility: 0.0026
Next Token :  , Posbility: 0.0007
Next Token :     , Posbility: 0.0007
Next Token :         , Posbility: 0.0007
Choose : 
,  Posbility: 0.9942
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')

---------------------------
Next Token :         , Posbility: 0.9277
Next Token :     , Posbility: 0.0709
Next Token :             , Posbility: 0.0007
Next Token : '', Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Choose :         ,  Posbility: 0.9277
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        
---------------------------
Next Token : el, Posbility: 0.9475
Next Token : else, Posbility: 0.0505
Next Token : 
, Posbility: 0.0009
Next Token : #, Posbility: 0.0004
Next Token : if, Posbility: 0.0002
Choose : el,  Posbility: 0.9475
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        el
---------------------------
Next Token : if, Posbility: 1.0000
Next Token :  if, Posbility: 0.0000
Next Token : im, Posbility: 0.0000
Next Token : ig, Posbility: 0.0000
Next Token : ific, Posbility: 0.0000
Choose : if,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif
---------------------------
Next Token :  i, Posbility: 0.9980
Next Token :  ord, Posbility: 0.0008
Next Token :  ', Posbility: 0.0003
Next Token :  len, Posbility: 0.0002
Next Token :  (, Posbility: 0.0001
Choose :  i,  Posbility: 0.9980
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i
---------------------------
Next Token :  ==, Posbility: 0.9978
Next Token : ==, Posbility: 0.0006
Next Token : !=, Posbility: 0.0005
Next Token : ., Posbility: 0.0003
Next Token :  in, Posbility: 0.0003
Choose :  ==,  Posbility: 0.9978
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i ==
---------------------------
Next Token :  ', Posbility: 0.9421
Next Token :  '/, Posbility: 0.0194
Next Token :  '[, Posbility: 0.0192
Next Token :  '(, Posbility: 0.0073
Next Token :  "', Posbility: 0.0066
Choose :  ',  Posbility: 0.9421
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '
---------------------------
Next Token : @, Posbility: 0.2448
Next Token : =, Posbility: 0.1442
Next Token : ?', Posbility: 0.0832
Next Token : ,', Posbility: 0.0692
Next Token : =', Posbility: 0.0562
Choose : @,  Posbility: 0.2448
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@
---------------------------
Next Token : ':, Posbility: 0.9960
Next Token : ', Posbility: 0.0030
Next Token : {, Posbility: 0.0001
Next Token : _, Posbility: 0.0001
Next Token : X, Posbility: 0.0000
Choose : ':,  Posbility: 0.9960
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
---------------------------
Next Token : 
, Posbility: 0.9992
Next Token :  , Posbility: 0.0003
Next Token :  #, Posbility: 0.0002
Next Token :     , Posbility: 0.0001
Next Token :   , Posbility: 0.0001
Choose : 
,  Posbility: 0.9992
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':

---------------------------
Next Token :             , Posbility: 0.9995
Next Token :                 , Posbility: 0.0002
Next Token :            , Posbility: 0.0001
Next Token :         , Posbility: 0.0001
Next Token :              , Posbility: 0.0001
Choose :             ,  Posbility: 0.9995
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
            
---------------------------
Next Token : qu, Posbility: 0.9976
Next Token : if, Posbility: 0.0008
Next Token : pass, Posbility: 0.0006
Next Token : i, Posbility: 0.0001
Next Token : #, Posbility: 0.0001
Choose : qu,  Posbility: 0.9976
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
            qu
---------------------------
Next Token : otation, Posbility: 1.0000
Next Token : ot, Posbility: 0.0000
Next Token : otion, Posbility: 0.0000
Next Token : oting, Posbility: 0.0000
Next Token : itation, Posbility: 0.0000
Choose : otation,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
            quotation
---------------------------
Next Token : _, Posbility: 1.0000
Next Token :  =, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token : ,, Posbility: 0.0000
Choose : _,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
            quotation_
---------------------------
Next Token : marks, Posbility: 1.0000
Next Token : mark, Posbility: 0.0000
Next Token :  marks, Posbility: 0.0000
Next Token : flags, Posbility: 0.0000
Next Token : marked, Posbility: 0.0000
Choose : marks,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
            quotation_marks
---------------------------
Next Token : ., Posbility: 0.9999
Next Token :  =, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token :  +=, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Choose : .,  Posbility: 0.9999
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
            quotation_marks.
---------------------------
Next Token : append, Posbility: 0.9999
Next Token : ext, Posbility: 0.0000
Next Token : insert, Posbility: 0.0000
Next Token : clear, Posbility: 0.0000
Next Token : app, Posbility: 0.0000
Choose : append,  Posbility: 0.9999
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
            quotation_marks.append
---------------------------
Next Token : (', Posbility: 0.9839
Next Token : (, Posbility: 0.0142
Next Token : (", Posbility: 0.0019
Next Token :  (', Posbility: 0.0000
Next Token : ((, Posbility: 0.0000
Choose : (',  Posbility: 0.9839
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
            quotation_marks.append('
---------------------------
Next Token : @, Posbility: 0.9979
Next Token : <, Posbility: 0.0004
Next Token : @@, Posbility: 0.0003
Next Token : *, Posbility: 0.0002
Next Token : \, Posbility: 0.0002
Choose : @,  Posbility: 0.9979
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
            quotation_marks.append('@
---------------------------
Next Token : '), Posbility: 0.9996
Next Token : ', Posbility: 0.0001
Next Token : ');, Posbility: 0.0000
Next Token :  ', Posbility: 0.0000
Next Token : !, Posbility: 0.0000
Choose : '),  Posbility: 0.9996
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
            quotation_marks.append('@')
---------------------------
Next Token : 
, Posbility: 0.9891
Next Token : 

, Posbility: 0.0069
Next Token :  , Posbility: 0.0010
Next Token :     , Posbility: 0.0007
Next Token :         , Posbility: 0.0005
Choose : 
,  Posbility: 0.9891
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
            quotation_marks.append('@')

---------------------------
Next Token :         , Posbility: 0.8841
Next Token :     , Posbility: 0.1129
Next Token :             , Posbility: 0.0019
Next Token : 
, Posbility: 0.0002
Next Token : #, Posbility: 0.0002
Choose :         ,  Posbility: 0.8841
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
            quotation_marks.append('@')
        
---------------------------
Next Token : el, Posbility: 0.9116
Next Token : else, Posbility: 0.0834
Next Token : 
, Posbility: 0.0022
Next Token : #, Posbility: 0.0010
Next Token : qu, Posbility: 0.0005
Choose : el,  Posbility: 0.9116
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
            quotation_marks.append('@')
        el
---------------------------
Next Token : if, Posbility: 1.0000
Next Token :  if, Posbility: 0.0000
Next Token : ig, Posbility: 0.0000
Next Token : ific, Posbility: 0.0000
Next Token : apsed, Posbility: 0.0000
Choose : if,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
            quotation_marks.append('@')
        elif
---------------------------
Next Token :  i, Posbility: 0.9959
Next Token :  ord, Posbility: 0.0013
Next Token :  len, Posbility: 0.0008
Next Token :  ', Posbility: 0.0005
Next Token :  (, Posbility: 0.0002
Choose :  i,  Posbility: 0.9959
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
            quotation_marks.append('@')
        elif i
---------------------------
Next Token :  ==, Posbility: 0.9942
Next Token : ., Posbility: 0.0020
Next Token : ==, Posbility: 0.0013
Next Token :  in, Posbility: 0.0010
Next Token : !=, Posbility: 0.0006
Choose :  ==,  Posbility: 0.9942
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
            quotation_marks.append('@')
        elif i ==
---------------------------
Next Token :  ', Posbility: 0.8877
Next Token :  '[, Posbility: 0.0457
Next Token :  '/, Posbility: 0.0425
Next Token :  "', Posbility: 0.0106
Next Token :  '(, Posbility: 0.0065
Choose :  ',  Posbility: 0.8877
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
            quotation_marks.append('@')
        elif i == '
---------------------------
Next Token : &, Posbility: 0.1125
Next Token : #, Posbility: 0.0886
Next Token : %, Posbility: 0.0835
Next Token : {, Posbility: 0.0783
Next Token : $, Posbility: 0.0599
Choose : &,  Posbility: 0.1125
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
            quotation_marks.append('@')
        elif i == '&
---------------------------
Next Token : ':, Posbility: 0.9942
Next Token : ', Posbility: 0.0039
Next Token : lt, Posbility: 0.0003
Next Token : gt, Posbility: 0.0003
Next Token : amp, Posbility: 0.0002
Choose : ':,  Posbility: 0.9942
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
            quotation_marks.append('@')
        elif i == '&':
---------------------------
Next Token : 
, Posbility: 0.9993
Next Token :  , Posbility: 0.0002
Next Token :  #, Posbility: 0.0002
Next Token :   , Posbility: 0.0001
Next Token :     , Posbility: 0.0001
Choose : 
,  Posbility: 0.9993
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
            quotation_marks.append('@')
        elif i == '&':

---------------------------
Next Token :             , Posbility: 0.9997
Next Token :                 , Posbility: 0.0002
Next Token :              , Posbility: 0.0000
Next Token :            , Posbility: 0.0000
Next Token :         , Posbility: 0.0000
Choose :             ,  Posbility: 0.9997
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
            quotation_marks.append('@')
        elif i == '&':
            
---------------------------
Next Token : qu, Posbility: 0.9993
Next Token : pass, Posbility: 0.0002
Next Token : if, Posbility: 0.0002
Next Token : #, Posbility: 0.0000
Next Token : return, Posbility: 0.0000
Choose : qu,  Posbility: 0.9993
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
            quotation_marks.append('@')
        elif i == '&':
            qu
---------------------------
Next Token : otation, Posbility: 1.0000
Next Token : ot, Posbility: 0.0000
Next Token : itation, Posbility: 0.0000
Next Token : otion, Posbility: 0.0000
Next Token : oting, Posbility: 0.0000
Choose : otation,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
            quotation_marks.append('@')
        elif i == '&':
            quotation
---------------------------
Next Token : _, Posbility: 1.0000
Next Token :  =, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Next Token : =, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Choose : _,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
            quotation_marks.append('@')
        elif i == '&':
            quotation_
---------------------------
Next Token : marks, Posbility: 1.0000
Next Token : mark, Posbility: 0.0000
Next Token :  marks, Posbility: 0.0000
Next Token : flags, Posbility: 0.0000
Next Token : letters, Posbility: 0.0000
Choose : marks,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
            quotation_marks.append('@')
        elif i == '&':
            quotation_marks
---------------------------
Next Token : ., Posbility: 1.0000
Next Token :  =, Posbility: 0.0000
Next Token :  +=, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : ., Posbility: 0.0000
Choose : .,  Posbility: 1.0000
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
            quotation_marks.append('@')
        elif i == '&':
            quotation_marks.
---------------------------
Next Token : append, Posbility: 0.9999
Next Token : ext, Posbility: 0.0000
Next Token : clear, Posbility: 0.0000
Next Token : insert, Posbility: 0.0000
Next Token : add, Posbility: 0.0000
Choose : append,  Posbility: 0.9999
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
            quotation_marks.append('@')
        elif i == '&':
            quotation_marks.append
---------------------------
Next Token : (', Posbility: 0.9967
Next Token : (, Posbility: 0.0028
Next Token : (", Posbility: 0.0004
Next Token :  (', Posbility: 0.0000
Next Token : (), Posbility: 0.0000
Choose : (',  Posbility: 0.9967
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
            quotation_marks.append('@')
        elif i == '&':
            quotation_marks.append('
---------------------------
Next Token : &, Posbility: 0.9975
Next Token : &&, Posbility: 0.0006
Next Token : #, Posbility: 0.0004
Next Token :  &, Posbility: 0.0003
Next Token : and, Posbility: 0.0002
Choose : &,  Posbility: 0.9975
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
            quotation_marks.append('@')
        elif i == '&':
            quotation_marks.append('&
---------------------------
Next Token : '), Posbility: 0.9998
Next Token : amp, Posbility: 0.0001
Next Token : ');, Posbility: 0.0000
Next Token : #, Posbility: 0.0000
Next Token : ', Posbility: 0.0000
Choose : '),  Posbility: 0.9998
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
            quotation_marks.append('@')
        elif i == '&':
            quotation_marks.append('&')
---------------------------
Next Token : 
, Posbility: 0.9900
Next Token : 

, Posbility: 0.0059
Next Token :  , Posbility: 0.0010
Next Token :     , Posbility: 0.0009
Next Token :         , Posbility: 0.0007
Choose : 
,  Posbility: 0.9900
---------------------------
'''Write a function to extract values between quotation marks " " of the given string.'''
def 
'''
def extract_quotation_marks(string):
    '''
    This function takes a string as input and returns a list of all the quotation marks in the string.
    '''
    quotation_marks = []
    for i in string:
        if i == '"':
            quotation_marks.append('"')
        elif i == "'":
            quotation_marks.append('"')
        elif i == ' ':
            quotation_marks.append(' ')
        elif i == '\n':
            quotation_marks.append('\n')
        elif i == '\t':
            quotation_marks.append('\t')
        elif i == ',':
            quotation_marks.append(',')
        elif i == '.':
            quotation_marks.append('.')
        elif i == '!':
            quotation_marks.append('!')
        elif i == '?':
            quotation_marks.append('?')
        elif i == ':':
            quotation_marks.append(':')
        elif i == ';':
            quotation_marks.append(';')
        elif i == '<':
            quotation_marks.append('<')
        elif i == '>':
            quotation_marks.append('>')
        elif i == '@':
            quotation_marks.append('@')
        elif i == '&':
            quotation_marks.append('&')

---------------------------


<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>

<<<<<<<<<<<<< End : Timeout >>>>>>>>>>>>