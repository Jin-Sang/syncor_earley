<<<<<<<<<<<< 161 problem >>>>>>>>>>>




Next Token : 
, Posbility: 0.3500
Next Token : 	, Posbility: 0.0425
Next Token : iz, Posbility: 0.0378
Next Token : ix, Posbility: 0.0370
Next Token : ia, Posbility: 0.0326
syntax error : 

Choose : 	, Posbility: 0.0425
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	
---------------------------
Next Token : f, Posbility: 0.2453
Next Token : find, Posbility: 0.1359
Next Token : ways, Posbility: 0.0330
Next Token : get, Posbility: 0.0292
Next Token : p, Posbility: 0.0238
Choose : f, Posbility: 0.2453
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	f
---------------------------
Next Token : ence, Posbility: 0.7261
Next Token : (, Posbility: 0.0660
Next Token : ences, Posbility: 0.0347
Next Token : ancy, Posbility: 0.0229
Next Token : encing, Posbility: 0.0172
Choose : ence, Posbility: 0.7261
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence
---------------------------
Next Token : _, Posbility: 0.4407
Next Token : (, Posbility: 0.3511
Next Token : W, Posbility: 0.0332
Next Token : P, Posbility: 0.0120
Next Token : Pain, Posbility: 0.0104
Choose : _, Posbility: 0.4407
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_
---------------------------
Next Token : p, Posbility: 0.1252
Next Token : pain, Posbility: 0.1103
Next Token : col, Posbility: 0.0673
Next Token : color, Posbility: 0.0413
Next Token : count, Posbility: 0.0330
Choose : p, Posbility: 0.1252
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_p
---------------------------
Next Token : aint, Posbility: 0.9723
Next Token : ossible, Posbility: 0.0038
Next Token : ixels, Posbility: 0.0031
Next Token : (, Posbility: 0.0030
Next Token : aints, Posbility: 0.0014
Choose : aint, Posbility: 0.9723
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint
---------------------------
Next Token : (, Posbility: 0.6701
Next Token : _, Posbility: 0.1153
Next Token : ings, Posbility: 0.1094
Next Token : ing, Posbility: 0.0755
Next Token :  (, Posbility: 0.0088
Choose : (, Posbility: 0.6701
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(
---------------------------
Next Token : n, Posbility: 0.4373
Next Token : f, Posbility: 0.3000
Next Token : x, Posbility: 0.0192
Next Token : color, Posbility: 0.0140
Next Token : k, Posbility: 0.0138
Choose : n, Posbility: 0.4373
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n
---------------------------
Next Token : ,, Posbility: 0.9503
Next Token : :, Posbility: 0.0209
Next Token : ,, Posbility: 0.0120
Next Token : _, Posbility: 0.0056
Next Token : ):, Posbility: 0.0028
Choose : ,, Posbility: 0.9503
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n,
---------------------------
Next Token :  k, Posbility: 0.4743
Next Token : k, Posbility: 0.3234
Next Token :  m, Posbility: 0.0822
Next Token : m, Posbility: 0.0493
Next Token :  colors, Posbility: 0.0090
Choose :  k, Posbility: 0.4743
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k
---------------------------
Next Token : ,, Posbility: 0.7736
Next Token : ):, Posbility: 0.2090
Next Token : ,, Posbility: 0.0095
Next Token : ), Posbility: 0.0059
Next Token : s, Posbility: 0.0004
Choose : ,, Posbility: 0.7736
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k,
---------------------------
Next Token :  m, Posbility: 0.1157
Next Token :  color, Posbility: 0.1138
Next Token :  colors, Posbility: 0.0791
Next Token :  c, Posbility: 0.0516
Next Token :  x, Posbility: 0.0515
Choose :  m, Posbility: 0.1157
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m
---------------------------
Next Token : ,, Posbility: 0.5972
Next Token : ):, Posbility: 0.3843
Next Token : ), Posbility: 0.0048
Next Token : ,, Posbility: 0.0028
Next Token : _, Posbility: 0.0022
Choose : ,, Posbility: 0.5972
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m,
---------------------------
Next Token :  colors, Posbility: 0.1984
Next Token :  color, Posbility: 0.0610
Next Token :  f, Posbility: 0.0584
Next Token :  c, Posbility: 0.0580
Next Token :  x, Posbility: 0.0438
Choose :  colors, Posbility: 0.1984
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors
---------------------------
Next Token : ):, Posbility: 0.7417
Next Token : ,, Posbility: 0.2162
Next Token : _, Posbility: 0.0220
Next Token : ), Posbility: 0.0092
Next Token : =, Posbility: 0.0032
Choose : ):, Posbility: 0.7417
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
---------------------------
Next Token : 
, Posbility: 0.8262
Next Token : 

, Posbility: 0.0881
Next Token :  , Posbility: 0.0412
Next Token : , Posbility: 0.0169
Next Token : 	, Posbility: 0.0109
Choose : 
, Posbility: 0.8262
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):

---------------------------
Next Token : 	, Posbility: 0.7598
Next Token :     , Posbility: 0.1950
Next Token :   , Posbility: 0.0214
Next Token : 		, Posbility: 0.0135
Next Token :    , Posbility: 0.0031
Choose : 	, Posbility: 0.7598
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	
---------------------------
Next Token : if, Posbility: 0.3177
Next Token : #, Posbility: 0.1454
Next Token : '', Posbility: 0.0679
Next Token : 
, Posbility: 0.0538
Next Token : def, Posbility: 0.0303
Choose : if, Posbility: 0.3177
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if
---------------------------
Next Token :  n, Posbility: 0.5394
Next Token :  m, Posbility: 0.1212
Next Token :  (, Posbility: 0.1137
Next Token :  k, Posbility: 0.0713
Next Token : (, Posbility: 0.0649
Choose :  n, Posbility: 0.5394
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n
---------------------------
Next Token :  ==, Posbility: 0.4432
Next Token :  <, Posbility: 0.1741
Next Token : ==, Posbility: 0.0947
Next Token :  <=, Posbility: 0.0778
Next Token : <, Posbility: 0.0766
Choose :  ==, Posbility: 0.4432
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n ==
---------------------------
Next Token :  0, Posbility: 0.5002
Next Token :  1, Posbility: 0.3032
Next Token :  2, Posbility: 0.0884
Next Token :  k, Posbility: 0.0544
Next Token :  m, Posbility: 0.0355
Choose :  0, Posbility: 0.5002
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0
---------------------------
Next Token :  or, Posbility: 0.5592
Next Token : :, Posbility: 0.3770
Next Token :  and, Posbility: 0.0508
Next Token :  :, Posbility: 0.0089
Next Token :   , Posbility: 0.0015
Choose :  or, Posbility: 0.5592
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or
---------------------------
Next Token :  k, Posbility: 0.6750
Next Token :  m, Posbility: 0.2411
Next Token :  n, Posbility: 0.0354
Next Token :  (, Posbility: 0.0251
Next Token :  len, Posbility: 0.0064
Choose :  k, Posbility: 0.6750
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k
---------------------------
Next Token :  ==, Posbility: 0.9577
Next Token : ==, Posbility: 0.0115
Next Token :  <=, Posbility: 0.0094
Next Token :  >, Posbility: 0.0065
Next Token :  <, Posbility: 0.0053
Choose :  ==, Posbility: 0.9577
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k ==
---------------------------
Next Token :  0, Posbility: 0.9739
Next Token : 0, Posbility: 0.0092
Next Token :  1, Posbility: 0.0064
Next Token :  m, Posbility: 0.0052
Next Token :  2, Posbility: 0.0017
Choose :  0, Posbility: 0.9739
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0
---------------------------
Next Token : :, Posbility: 0.6352
Next Token :  or, Posbility: 0.3520
Next Token :  :, Posbility: 0.0095
Next Token :  and, Posbility: 0.0015
Next Token :   , Posbility: 0.0006
Choose : :, Posbility: 0.6352
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
---------------------------
Next Token : 
, Posbility: 0.8923
Next Token :  return, Posbility: 0.0468
Next Token :  , Posbility: 0.0384
Next Token :  #, Posbility: 0.0084
Next Token : 	, Posbility: 0.0034
Choose : 
, Posbility: 0.8923
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:

---------------------------
Next Token : 		, Posbility: 0.9910
Next Token : 	, Posbility: 0.0055
Next Token : 			, Posbility: 0.0020
Next Token :     , Posbility: 0.0005
Next Token :         , Posbility: 0.0003
Choose : 		, Posbility: 0.9910
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		
---------------------------
Next Token : return, Posbility: 0.9271
Next Token : if, Posbility: 0.0206
Next Token : print, Posbility: 0.0173
Next Token : ans, Posbility: 0.0063
Next Token : #, Posbility: 0.0046
Choose : return, Posbility: 0.9271
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return
---------------------------
Next Token :  0, Posbility: 0.6790
Next Token :  1, Posbility: 0.2348
Next Token :  n, Posbility: 0.0207
Next Token :  m, Posbility: 0.0109
Next Token :  (, Posbility: 0.0071
Choose :  0, Posbility: 0.6790
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
---------------------------
Next Token : 
, Posbility: 0.7253
Next Token : 

, Posbility: 0.2363
Next Token : ;, Posbility: 0.0157
Next Token :  , Posbility: 0.0095
Next Token :  if, Posbility: 0.0033
Choose : 
, Posbility: 0.7253
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0

---------------------------
Next Token : 	, Posbility: 0.9722
Next Token : 		, Posbility: 0.0227
Next Token : 			, Posbility: 0.0026
Next Token :     , Posbility: 0.0007
Next Token :  , Posbility: 0.0004
Choose : 	, Posbility: 0.9722
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	
---------------------------
Next Token : if, Posbility: 0.5756
Next Token : el, Posbility: 0.1459
Next Token : 
, Posbility: 0.1137
Next Token : else, Posbility: 0.0281
Next Token : #, Posbility: 0.0217
Choose : if, Posbility: 0.5756
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if
---------------------------
Next Token :  colors, Posbility: 0.3285
Next Token :  n, Posbility: 0.2995
Next Token :  m, Posbility: 0.1914
Next Token :  (, Posbility: 0.0910
Next Token :  k, Posbility: 0.0486
Choose :  colors, Posbility: 0.3285
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors
---------------------------
Next Token : [, Posbility: 0.8174
Next Token :  ==, Posbility: 0.1322
Next Token : ., Posbility: 0.0193
Next Token :  <, Posbility: 0.0052
Next Token :  >, Posbility: 0.0036
Choose : [, Posbility: 0.8174
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[
---------------------------
Next Token : n, Posbility: 0.6639
Next Token : 0, Posbility: 0.1817
Next Token : m, Posbility: 0.0580
Next Token : k, Posbility: 0.0505
Next Token : -, Posbility: 0.0135
Choose : n, Posbility: 0.6639
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n
---------------------------
Next Token : -, Posbility: 0.4653
Next Token : ], Posbility: 0.2546
Next Token :  -, Posbility: 0.1474
Next Token : ][, Posbility: 0.1058
Next Token : +, Posbility: 0.0070
Choose : -, Posbility: 0.4653
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-
---------------------------
Next Token : 1, Posbility: 0.9847
Next Token : 2, Posbility: 0.0137
Next Token : k, Posbility: 0.0007
Next Token : 3, Posbility: 0.0005
Next Token :  1, Posbility: 0.0001
Choose : 1, Posbility: 0.9847
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1
---------------------------
Next Token : ], Posbility: 0.8032
Next Token : ][, Posbility: 0.1886
Next Token : ]., Posbility: 0.0028
Next Token : ]+, Posbility: 0.0023
Next Token : ]-, Posbility: 0.0007
Choose : ], Posbility: 0.8032
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1]
---------------------------
Next Token :  ==, Posbility: 0.7923
Next Token : !=, Posbility: 0.1646
Next Token : ==, Posbility: 0.0139
Next Token :  >, Posbility: 0.0077
Next Token : !, Posbility: 0.0045
Choose :  ==, Posbility: 0.7923
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] ==
---------------------------
Next Token :  colors, Posbility: 0.9745
Next Token :  ', Posbility: 0.0055
Next Token :  k, Posbility: 0.0035
Next Token :  m, Posbility: 0.0034
Next Token :  ", Posbility: 0.0031
Choose :  colors, Posbility: 0.9745
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors
---------------------------
Next Token : [, Posbility: 0.9990
Next Token :  [, Posbility: 0.0008
Next Token : :, Posbility: 0.0001
Next Token : _, Posbility: 0.0000
Next Token :  and, Posbility: 0.0000
Choose : [, Posbility: 0.9990
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[
---------------------------
Next Token : k, Posbility: 0.9575
Next Token : n, Posbility: 0.0323
Next Token : m, Posbility: 0.0037
Next Token : 0, Posbility: 0.0023
Next Token : (, Posbility: 0.0013
Choose : k, Posbility: 0.9575
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k
---------------------------
Next Token : -, Posbility: 0.9639
Next Token :  -, Posbility: 0.0178
Next Token : ]:, Posbility: 0.0119
Next Token : ], Posbility: 0.0030
Next Token : +, Posbility: 0.0022
Choose : -, Posbility: 0.9639
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-
---------------------------
Next Token : 1, Posbility: 0.9967
Next Token : 2, Posbility: 0.0030
Next Token : m, Posbility: 0.0001
Next Token : n, Posbility: 0.0001
Next Token : 3, Posbility: 0.0000
Choose : 1, Posbility: 0.9967
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1
---------------------------
Next Token : ]:, Posbility: 0.8922
Next Token : ], Posbility: 0.1040
Next Token : ][, Posbility: 0.0014
Next Token : ]-, Posbility: 0.0005
Next Token : -, Posbility: 0.0004
Choose : ]:, Posbility: 0.8922
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
---------------------------
Next Token : 
, Posbility: 0.9700
Next Token :  #, Posbility: 0.0108
Next Token : 	, Posbility: 0.0064
Next Token :  , Posbility: 0.0041
Next Token :   , Posbility: 0.0018
Choose : 
, Posbility: 0.9700
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:

---------------------------
Next Token : 		, Posbility: 0.9950
Next Token : 			, Posbility: 0.0023
Next Token : 	, Posbility: 0.0015
Next Token :         , Posbility: 0.0003
Next Token :     , Posbility: 0.0003
Choose : 		, Posbility: 0.9950
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		
---------------------------
Next Token : return, Posbility: 0.9301
Next Token : if, Posbility: 0.0170
Next Token : #, Posbility: 0.0131
Next Token : ans, Posbility: 0.0043
Next Token : print, Posbility: 0.0029
Choose : return, Posbility: 0.9301
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return
---------------------------
Next Token :  1, Posbility: 0.8125
Next Token :  2, Posbility: 0.0688
Next Token :  fence, Posbility: 0.0392
Next Token :  (, Posbility: 0.0170
Next Token :  0, Posbility: 0.0129
Choose :  1, Posbility: 0.8125
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1
---------------------------
Next Token :  +, Posbility: 0.6965
Next Token : 
, Posbility: 0.2077
Next Token : +, Posbility: 0.0610
Next Token : 

, Posbility: 0.0231
Next Token :  if, Posbility: 0.0045
Choose :  +, Posbility: 0.6965
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 +
---------------------------
Next Token :  fence, Posbility: 0.9002
Next Token :  (, Posbility: 0.0219
Next Token :   , Posbility: 0.0159
Next Token :  min, Posbility: 0.0158
Next Token :  f, Posbility: 0.0074
Choose :  fence, Posbility: 0.9002
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence
---------------------------
Next Token : _, Posbility: 0.9989
Next Token : (, Posbility: 0.0009
Next Token : _(, Posbility: 0.0001
Next Token : [, Posbility: 0.0001
Next Token : p, Posbility: 0.0000
Choose : _, Posbility: 0.9989
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_
---------------------------
Next Token : p, Posbility: 0.9993
Next Token : pain, Posbility: 0.0001
Next Token : rec, Posbility: 0.0000
Next Token : c, Posbility: 0.0000
Next Token : count, Posbility: 0.0000
Choose : p, Posbility: 0.9993
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_p
---------------------------
Next Token : aint, Posbility: 0.9998
Next Token : aints, Posbility: 0.0002
Next Token : ain, Posbility: 0.0000
Next Token :  paint, Posbility: 0.0000
Next Token : ait, Posbility: 0.0000
Choose : aint, Posbility: 0.9998
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint
---------------------------
Next Token : (, Posbility: 0.9989
Next Token :  (, Posbility: 0.0006
Next Token : ((, Posbility: 0.0003
Next Token : _, Posbility: 0.0001
Next Token : ([, Posbility: 0.0000
Choose : (, Posbility: 0.9989
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(
---------------------------
Next Token : n, Posbility: 0.9974
Next Token : m, Posbility: 0.0009
Next Token :  n, Posbility: 0.0004
Next Token : 
, Posbility: 0.0003
Next Token : 1, Posbility: 0.0002
Choose : n, Posbility: 0.9974
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n
---------------------------
Next Token : -, Posbility: 0.9310
Next Token :  -, Posbility: 0.0362
Next Token : ,, Posbility: 0.0312
Next Token : +, Posbility: 0.0006
Next Token : //, Posbility: 0.0003
Choose : -, Posbility: 0.9310
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-
---------------------------
Next Token : 1, Posbility: 0.9664
Next Token : 2, Posbility: 0.0331
Next Token : 3, Posbility: 0.0003
Next Token : k, Posbility: 0.0000
Next Token : 4, Posbility: 0.0000
Choose : 1, Posbility: 0.9664
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1
---------------------------
Next Token : ,, Posbility: 0.9976
Next Token : ,, Posbility: 0.0019
Next Token : ), Posbility: 0.0002
Next Token :  if, Posbility: 0.0001
Next Token : -, Posbility: 0.0001
Choose : ,, Posbility: 0.9976
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1,
---------------------------
Next Token :  k, Posbility: 0.9597
Next Token : k, Posbility: 0.0368
Next Token :  0, Posbility: 0.0007
Next Token :  m, Posbility: 0.0005
Next Token :  (, Posbility: 0.0005
Choose :  k, Posbility: 0.9597
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k
---------------------------
Next Token : ,, Posbility: 0.7848
Next Token : -, Posbility: 0.2118
Next Token : ), Posbility: 0.0009
Next Token : +, Posbility: 0.0008
Next Token : ,, Posbility: 0.0006
Choose : ,, Posbility: 0.7848
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k,
---------------------------
Next Token :  m, Posbility: 0.9912
Next Token : m, Posbility: 0.0042
Next Token :  n, Posbility: 0.0006
Next Token :  max, Posbility: 0.0005
Next Token :  min, Posbility: 0.0005
Choose :  m, Posbility: 0.9912
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m
---------------------------
Next Token : ,, Posbility: 0.8358
Next Token : -, Posbility: 0.0929
Next Token : +, Posbility: 0.0598
Next Token :  -, Posbility: 0.0048
Next Token :  +, Posbility: 0.0035
Choose : ,, Posbility: 0.8358
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m,
---------------------------
Next Token :  colors, Posbility: 0.9962
Next Token : col, Posbility: 0.0017
Next Token :  col, Posbility: 0.0004
Next Token :  [, Posbility: 0.0003
Next Token :  colours, Posbility: 0.0003
Choose :  colors, Posbility: 0.9962
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors
---------------------------
Next Token : ), Posbility: 0.9928
Next Token : ,, Posbility: 0.0022
Next Token : [, Posbility: 0.0011
Next Token : )+, Posbility: 0.0010
Next Token : )*, Posbility: 0.0006
Choose : ), Posbility: 0.9928
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
---------------------------
Next Token : 
, Posbility: 0.9095
Next Token : 

, Posbility: 0.0664
Next Token :  +, Posbility: 0.0065
Next Token :  , Posbility: 0.0052
Next Token : 	, Posbility: 0.0042
Choose : 
, Posbility: 0.9095
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)

---------------------------
Next Token : 	, Posbility: 0.9862
Next Token : 		, Posbility: 0.0102
Next Token : 
, Posbility: 0.0015
Next Token :     , Posbility: 0.0007
Next Token : 			, Posbility: 0.0003
Choose : 	, Posbility: 0.9862
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	
---------------------------
Next Token : else, Posbility: 0.5166
Next Token : return, Posbility: 0.3341
Next Token : el, Posbility: 0.0622
Next Token : if, Posbility: 0.0475
Next Token : 
, Posbility: 0.0174
Choose : else, Posbility: 0.5166
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else
---------------------------
Next Token : :, Posbility: 0.9914
Next Token :  :, Posbility: 0.0083
Next Token : :#, Posbility: 0.0002
Next Token : 
, Posbility: 0.0000
Next Token : 	, Posbility: 0.0000
Choose : :, Posbility: 0.9914
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
---------------------------
Next Token : 
, Posbility: 0.9727
Next Token :  , Posbility: 0.0140
Next Token : 	, Posbility: 0.0047
Next Token :  return, Posbility: 0.0043
Next Token :  #, Posbility: 0.0016
Choose : 
, Posbility: 0.9727
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:

---------------------------
Next Token : 		, Posbility: 0.9951
Next Token : 	, Posbility: 0.0022
Next Token : 			, Posbility: 0.0011
Next Token :         , Posbility: 0.0006
Next Token :     , Posbility: 0.0005
Choose : 		, Posbility: 0.9951
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		
---------------------------
Next Token : return, Posbility: 0.9437
Next Token : if, Posbility: 0.0104
Next Token : #, Posbility: 0.0056
Next Token : ans, Posbility: 0.0048
Next Token : print, Posbility: 0.0046
Choose : return, Posbility: 0.9437
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return
---------------------------
Next Token :  max, Posbility: 0.5655
Next Token :  min, Posbility: 0.1800
Next Token :  fence, Posbility: 0.1032
Next Token :  0, Posbility: 0.0448
Next Token :  1, Posbility: 0.0350
Choose :  max, Posbility: 0.5655
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max
---------------------------
Next Token : (, Posbility: 0.9855
Next Token : ([, Posbility: 0.0087
Next Token : ((, Posbility: 0.0037
Next Token :  (, Posbility: 0.0013
Next Token : (-, Posbility: 0.0003
Choose : (, Posbility: 0.9855
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(
---------------------------
Next Token : f, Posbility: 0.8967
Next Token : 
, Posbility: 0.0390
Next Token : 1, Posbility: 0.0229
Next Token : max, Posbility: 0.0064
Next Token :  fence, Posbility: 0.0046
Choose : f, Posbility: 0.8967
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(f
---------------------------
Next Token : ence, Posbility: 0.9997
Next Token :  fence, Posbility: 0.0001
Next Token : ences, Posbility: 0.0000
Next Token : nce, Posbility: 0.0000
Next Token : ENCE, Posbility: 0.0000
Choose : ence, Posbility: 0.9997
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(fence
---------------------------
Next Token : _, Posbility: 0.9995
Next Token : (, Posbility: 0.0004
Next Token : _(, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : 1, Posbility: 0.0000
Choose : _, Posbility: 0.9995
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(fence_
---------------------------
Next Token : p, Posbility: 0.9997
Next Token : color, Posbility: 0.0000
Next Token : f, Posbility: 0.0000
Next Token : pain, Posbility: 0.0000
Next Token : max, Posbility: 0.0000
Choose : p, Posbility: 0.9997
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(fence_p
---------------------------
Next Token : aint, Posbility: 0.9999
Next Token :  paint, Posbility: 0.0000
Next Token : aints, Posbility: 0.0000
Next Token : (, Posbility: 0.0000
Next Token : arm, Posbility: 0.0000
Choose : aint, Posbility: 0.9999
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(fence_paint
---------------------------
Next Token : (, Posbility: 0.9994
Next Token :  (, Posbility: 0.0003
Next Token : ((, Posbility: 0.0002
Next Token : _, Posbility: 0.0000
Next Token : (-, Posbility: 0.0000
Choose : (, Posbility: 0.9994
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(fence_paint(
---------------------------
Next Token : n, Posbility: 0.9970
Next Token : 
, Posbility: 0.0009
Next Token :  n, Posbility: 0.0006
Next Token : m, Posbility: 0.0005
Next Token : 2, Posbility: 0.0002
Choose : n, Posbility: 0.9970
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(fence_paint(n
---------------------------
Next Token : -, Posbility: 0.9504
Next Token : ,, Posbility: 0.0368
Next Token :  -, Posbility: 0.0118
Next Token : //, Posbility: 0.0004
Next Token : -(, Posbility: 0.0001
Choose : -, Posbility: 0.9504
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(fence_paint(n-
---------------------------
Next Token : 1, Posbility: 0.9923
Next Token : 2, Posbility: 0.0074
Next Token : 3, Posbility: 0.0001
Next Token :  1, Posbility: 0.0000
Next Token : k, Posbility: 0.0000
Choose : 1, Posbility: 0.9923
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(fence_paint(n-1
---------------------------
Next Token : ,, Posbility: 0.9994
Next Token : ,, Posbility: 0.0003
Next Token : ),, Posbility: 0.0001
Next Token : ), Posbility: 0.0000
Next Token :  if, Posbility: 0.0000
Choose : ,, Posbility: 0.9994
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(fence_paint(n-1,
---------------------------
Next Token :  k, Posbility: 0.9813
Next Token : k, Posbility: 0.0173
Next Token :  n, Posbility: 0.0003
Next Token :  (, Posbility: 0.0002
Next Token :  2, Posbility: 0.0001
Choose :  k, Posbility: 0.9813
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(fence_paint(n-1, k
---------------------------
Next Token : ,, Posbility: 0.9648
Next Token : -, Posbility: 0.0327
Next Token : +, Posbility: 0.0015
Next Token : ,, Posbility: 0.0003
Next Token :  -, Posbility: 0.0002
Choose : ,, Posbility: 0.9648
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(fence_paint(n-1, k,
---------------------------
Next Token :  m, Posbility: 0.9919
Next Token : m, Posbility: 0.0030
Next Token :  max, Posbility: 0.0018
Next Token :  min, Posbility: 0.0017
Next Token :   , Posbility: 0.0003
Choose :  m, Posbility: 0.9919
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(fence_paint(n-1, k, m
---------------------------
Next Token : ,, Posbility: 0.9534
Next Token : +, Posbility: 0.0217
Next Token : -, Posbility: 0.0215
Next Token :  +, Posbility: 0.0012
Next Token :  -, Posbility: 0.0009
Choose : ,, Posbility: 0.9534
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(fence_paint(n-1, k, m,
---------------------------
Next Token :  colors, Posbility: 0.9965
Next Token :  collections, Posbility: 0.0009
Next Token : col, Posbility: 0.0007
Next Token :  col, Posbility: 0.0004
Next Token :  list, Posbility: 0.0003
Choose :  colors, Posbility: 0.9965
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(fence_paint(n-1, k, m, colors
---------------------------
Next Token : ),, Posbility: 0.9269
Next Token : ), Posbility: 0.0683
Next Token : )+, Posbility: 0.0027
Next Token : )-, Posbility: 0.0005
Next Token : )*, Posbility: 0.0003
Choose : ),, Posbility: 0.9269
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(fence_paint(n-1, k, m, colors),
---------------------------
Next Token :  fence, Posbility: 0.8468
Next Token : 
, Posbility: 0.0577
Next Token :  , Posbility: 0.0408
Next Token : f, Posbility: 0.0201
Next Token :  f, Posbility: 0.0062
Choose :  fence, Posbility: 0.8468
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(fence_paint(n-1, k, m, colors), fence
---------------------------
Next Token : _, Posbility: 1.0000
Next Token : (, Posbility: 0.0000
Next Token : [, Posbility: 0.0000
Next Token : ), Posbility: 0.0000
Next Token : 2, Posbility: 0.0000
Choose : _, Posbility: 1.0000
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(fence_paint(n-1, k, m, colors), fence_
---------------------------
Next Token : p, Posbility: 1.0000
Next Token : f, Posbility: 0.0000
Next Token : pain, Posbility: 0.0000
Next Token : color, Posbility: 0.0000
Next Token : P, Posbility: 0.0000
Choose : p, Posbility: 1.0000
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(fence_paint(n-1, k, m, colors), fence_p
---------------------------
Next Token : aint, Posbility: 0.9999
Next Token :  paint, Posbility: 0.0001
Next Token : arm, Posbility: 0.0000
Next Token : air, Posbility: 0.0000
Next Token : att, Posbility: 0.0000
Choose : aint, Posbility: 0.9999
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(fence_paint(n-1, k, m, colors), fence_paint
---------------------------
Next Token : (, Posbility: 0.9992
Next Token :  (, Posbility: 0.0006
Next Token : ((, Posbility: 0.0001
Next Token : (-, Posbility: 0.0000
Next Token : _, Posbility: 0.0000
Choose : (, Posbility: 0.9992
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(fence_paint(n-1, k, m, colors), fence_paint(
---------------------------
Next Token : n, Posbility: 0.9990
Next Token : m, Posbility: 0.0004
Next Token :  n, Posbility: 0.0002
Next Token : 0, Posbility: 0.0001
Next Token : 
, Posbility: 0.0001
Choose : n, Posbility: 0.9990
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(fence_paint(n-1, k, m, colors), fence_paint(n
---------------------------
Next Token : ,, Posbility: 0.9249
Next Token : -, Posbility: 0.0717
Next Token : ,, Posbility: 0.0018
Next Token :  -, Posbility: 0.0008
Next Token : +, Posbility: 0.0007
Choose : ,, Posbility: 0.9249
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(fence_paint(n-1, k, m, colors), fence_paint(n,
---------------------------
Next Token :  k, Posbility: 0.9925
Next Token : k, Posbility: 0.0051
Next Token :  m, Posbility: 0.0012
Next Token :   , Posbility: 0.0003
Next Token :  n, Posbility: 0.0002
Choose :  k, Posbility: 0.9925
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(fence_paint(n-1, k, m, colors), fence_paint(n, k
---------------------------
Next Token : -, Posbility: 0.9495
Next Token : ,, Posbility: 0.0434
Next Token :  -, Posbility: 0.0065
Next Token : +, Posbility: 0.0004
Next Token : ,, Posbility: 0.0001
Choose : -, Posbility: 0.9495
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(fence_paint(n-1, k, m, colors), fence_paint(n, k-
---------------------------
Next Token : 1, Posbility: 0.9990
Next Token : 2, Posbility: 0.0007
Next Token :  1, Posbility: 0.0001
Next Token : m, Posbility: 0.0001
Next Token : n, Posbility: 0.0000
Choose : 1, Posbility: 0.9990
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(fence_paint(n-1, k, m, colors), fence_paint(n, k-1
---------------------------
Next Token : ,, Posbility: 0.9991
Next Token : ,, Posbility: 0.0008
Next Token : +, Posbility: 0.0000
Next Token : -, Posbility: 0.0000
Next Token : ,[, Posbility: 0.0000
Choose : ,, Posbility: 0.9991
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(fence_paint(n-1, k, m, colors), fence_paint(n, k-1,
---------------------------
Next Token :  m, Posbility: 0.9984
Next Token : m, Posbility: 0.0014
Next Token :   , Posbility: 0.0001
Next Token :  min, Posbility: 0.0000
Next Token :  max, Posbility: 0.0000
Choose :  m, Posbility: 0.9984
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(fence_paint(n-1, k, m, colors), fence_paint(n, k-1, m
---------------------------
Next Token : ,, Posbility: 0.9752
Next Token : -, Posbility: 0.0216
Next Token : +, Posbility: 0.0024
Next Token : ,, Posbility: 0.0004
Next Token :  -, Posbility: 0.0003
Choose : ,, Posbility: 0.9752
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(fence_paint(n-1, k, m, colors), fence_paint(n, k-1, m,
---------------------------
Next Token :  colors, Posbility: 0.9988
Next Token : col, Posbility: 0.0003
Next Token :  collections, Posbility: 0.0003
Next Token :  col, Posbility: 0.0003
Next Token :  colours, Posbility: 0.0001
Choose :  colors, Posbility: 0.9988
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(fence_paint(n-1, k, m, colors), fence_paint(n, k-1, m, colors
---------------------------
Next Token : )), Posbility: 0.9719
Next Token : ),, Posbility: 0.0139
Next Token : ), Posbility: 0.0083
Next Token : )+, Posbility: 0.0028
Next Token : ));, Posbility: 0.0013
Choose : )), Posbility: 0.9719
---------------------------
'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(fence_paint(n-1, k, m, colors), fence_paint(n, k-1, m, colors))
---------------------------
Next Token : 
, Posbility: 0.7221
Next Token : 

, Posbility: 0.2188
Next Token : <|endoftext|>, Posbility: 0.0156
Next Token :  , Posbility: 0.0152
Next Token : 	, Posbility: 0.0106
EOS token!!!
---------------------------
<<<<<<<<<<<<< FINISH >>>>>>>>>>>>



processing time : 21.548062324523926



----------No Syntax Error--------

'''Write a function to find out the number of ways of painting the fence such that at most 2 adjacent posts have the same color for the given fence with n posts and k colors.'''
def 	fence_paint(n, k, m, colors):
	if n == 0 or k == 0:
		return 0
	if colors[n-1] == colors[k-1]:
		return 1 + fence_paint(n-1, k, m, colors)
	else:
		return max(fence_paint(n-1, k, m, colors), fence_paint(n, k-1, m, colors))


<<<<<<<<<<<<< End : In Time >>>>>>>>>>>>